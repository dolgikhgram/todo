{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/Projects/React:Typescript-project/Todolist/todolist-project/src/components/AddNewTask/AddNewTask.tsx\",\n  _s = $RefreshSig$();\nimport { Button, TextField } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddNewTask = ({\n  addItem\n}) => {\n  _s();\n  const [newTask, setNewTask] = useState(\"\");\n  const [error, setError] = useState(false);\n  const CreateNewTask = value => {\n    setNewTask(value);\n    setError(false);\n  };\n  const onNewTitleChangeHandler = e => {\n    CreateNewTask(e.target.value);\n  };\n  const onEnterKeyPressHandler = e => {\n    if (e.charCode === 13) {\n      if (newTask.trim().length !== 0) addItem(newTask);else setError(true);\n      setNewTask('');\n    }\n  };\n  const addNewTaskHandler = () => {\n    if (newTask.trim().length !== 0) addItem(newTask);else setError(true);\n    setNewTask('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: onNewTitleChangeHandler,\n      onKeyPress: onEnterKeyPressHandler,\n      value: newTask,\n      className: error ? 'error' : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: addNewTaskHandler,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this), error && /*#__PURE__*/_jsxDEV(TextField, {\n      children: \"Field is required\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(AddNewTask, \"k2X1jjGgEcjGYReZODI5mDPlk7g=\");\n_c = AddNewTask;\nexport default AddNewTask;\nvar _c;\n$RefreshReg$(_c, \"AddNewTask\");","map":{"version":3,"names":["Button","TextField","React","useState","jsxDEV","_jsxDEV","AddNewTask","addItem","_s","newTask","setNewTask","error","setError","CreateNewTask","value","onNewTitleChangeHandler","e","target","onEnterKeyPressHandler","charCode","trim","length","addNewTaskHandler","children","onChange","onKeyPress","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/user/Documents/Projects/React:Typescript-project/Todolist/todolist-project/src/components/AddNewTask/AddNewTask.tsx"],"sourcesContent":["import { Button, TextField } from \"@mui/material\"\nimport React,{useState,ChangeEvent,KeyboardEvent} from \"react\"\n\ntype AddNewTaskPropsType = {\n    addItem:(value:string)=>void\n}\n\n\nconst AddNewTask  = ({addItem}:AddNewTaskPropsType)=>{\n    const [newTask,setNewTask] = useState(\"\")\n    const [error,setError]=useState(false)\n    const CreateNewTask = (value:string)=>{\n        setNewTask(value)\n        setError(false)\n    }\n    const onNewTitleChangeHandler = (e:ChangeEvent<HTMLInputElement>)=>{\n        CreateNewTask(e.target.value)\n    }\n    const onEnterKeyPressHandler = (e:KeyboardEvent<HTMLInputElement>)=>{\n                    if (e.charCode === 13 ){\n                        if (newTask.trim().length!==0) addItem(newTask)\n                        else setError(true)\n                        setNewTask('')\n                    }\n                }\n    const addNewTaskHandler  = ()=>{\n        if (newTask.trim().length!==0) addItem(newTask)\n        else setError(true)\n        setNewTask('')\n    }\n    return (\n        <div>\n                <input \n                onChange={onNewTitleChangeHandler} \n                onKeyPress={onEnterKeyPressHandler}\n                value={newTask}\n                className={ error ? 'error' : ''}/>\n                <Button onClick={addNewTaskHandler}>\n                    +\n                </Button>\n                {\n                    error&&<TextField>Field is required</TextField>\n                }\n            </div>\n    )\n}\n\nexport default AddNewTask"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,SAAS,QAAQ,eAAe;AACjD,OAAOC,KAAK,IAAEC,QAAQ,QAAiC,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAO9D,MAAMC,UAAU,GAAIA,CAAC;EAACC;AAA2B,CAAC,KAAG;EAAAC,EAAA;EACjD,MAAM,CAACC,OAAO,EAACC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACzC,MAAM,CAACQ,KAAK,EAACC,QAAQ,CAAC,GAACT,QAAQ,CAAC,KAAK,CAAC;EACtC,MAAMU,aAAa,GAAIC,KAAY,IAAG;IAClCJ,UAAU,CAACI,KAAK,CAAC;IACjBF,QAAQ,CAAC,KAAK,CAAC;EACnB,CAAC;EACD,MAAMG,uBAAuB,GAAIC,CAA+B,IAAG;IAC/DH,aAAa,CAACG,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC;EACjC,CAAC;EACD,MAAMI,sBAAsB,GAAIF,CAAiC,IAAG;IACpD,IAAIA,CAAC,CAACG,QAAQ,KAAK,EAAE,EAAE;MACnB,IAAIV,OAAO,CAACW,IAAI,CAAC,CAAC,CAACC,MAAM,KAAG,CAAC,EAAEd,OAAO,CAACE,OAAO,CAAC,MAC1CG,QAAQ,CAAC,IAAI,CAAC;MACnBF,UAAU,CAAC,EAAE,CAAC;IAClB;EACJ,CAAC;EACb,MAAMY,iBAAiB,GAAIA,CAAA,KAAI;IAC3B,IAAIb,OAAO,CAACW,IAAI,CAAC,CAAC,CAACC,MAAM,KAAG,CAAC,EAAEd,OAAO,CAACE,OAAO,CAAC,MAC1CG,QAAQ,CAAC,IAAI,CAAC;IACnBF,UAAU,CAAC,EAAE,CAAC;EAClB,CAAC;EACD,oBACIL,OAAA;IAAAkB,QAAA,gBACQlB,OAAA;MACAmB,QAAQ,EAAET,uBAAwB;MAClCU,UAAU,EAAEP,sBAAuB;MACnCJ,KAAK,EAAEL,OAAQ;MACfiB,SAAS,EAAGf,KAAK,GAAG,OAAO,GAAG;IAAG;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACnCzB,OAAA,CAACL,MAAM;MAAC+B,OAAO,EAAET,iBAAkB;MAAAC,QAAA,EAAC;IAEpC;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAELnB,KAAK,iBAAEN,OAAA,CAACJ,SAAS;MAAAsB,QAAA,EAAC;IAAiB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAW,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAElD,CAAC;AAElB,CAAC;AAAAtB,EAAA,CArCKF,UAAU;AAAA0B,EAAA,GAAV1B,UAAU;AAuChB,eAAeA,UAAU;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}