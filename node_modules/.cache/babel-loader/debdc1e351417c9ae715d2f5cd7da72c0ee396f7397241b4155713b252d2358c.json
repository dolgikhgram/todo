{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/Projects/React:Typescript-project/Todolist/todolist-project/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { Todolist } from './components/Todolist/Todolist/Todolist';\nimport { v1 } from 'uuid';\nimport AddItemForm from './components/AddItemForm/AddItemForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  let todolistId1 = v1();\n  let todolistId2 = v1();\n  let [tasks, setTasks] = useState({\n    [todolistId1]: [{\n      id: v1(),\n      title: 'CSS',\n      isDone: true\n    }, {\n      id: v1(),\n      title: 'JS',\n      isDone: true\n    }, {\n      id: v1(),\n      title: 'React',\n      isDone: false\n    }, {\n      id: v1(),\n      title: 'Redux',\n      isDone: false\n    }],\n    [todolistId2]: [{\n      id: v1(),\n      title: 'Book',\n      isDone: false\n    }, {\n      id: v1(),\n      title: 'Milk',\n      isDone: true\n    }]\n  });\n  const [todolist, setTodolist] = useState([{\n    id: todolistId1,\n    title: \"what to learn\",\n    filter: \"active\"\n  }, {\n    id: todolistId2,\n    title: \"what to buy\",\n    filter: \"completed\"\n  }]);\n  const addNewTask = (value, id) => {\n    if (value.trim().length !== 0) {\n      let newTasks = {\n        ...tasks\n      };\n      newTasks[id].unshift({\n        id: v1(),\n        title: value.trim(),\n        isDone: false\n      });\n      setTasks(newTasks);\n    }\n  };\n  const addNewItemForms = () => {};\n  const changeChecked = (id, todolistId) => {\n    let currentTask = tasks[todolistId];\n    let task = currentTask.find(el => el.id === id);\n    if (task) task.isDone = !task.isDone;\n    setTasks({\n      ...tasks\n    });\n  };\n  let removeTask = (id, todolistId) => {\n    let currentTask = tasks[todolistId];\n    currentTask = currentTask.filter(t => {\n      return t.id !== id;\n    });\n    tasks[todolistId] = currentTask;\n    setTasks({\n      ...tasks\n    });\n  };\n  let changeFilter = (filter, todolistId) => {\n    todolist.map(el => {\n      if (el.id === todolistId) {\n        el.filter = filter;\n        setTodolist([...todolist]);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(AddItemForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: todolist.map(tl => {\n        let tasksForToDoList = tasks[tl.id];\n        if (tl.filter === \"completed\") {\n          tasksForToDoList = tasks[tl.id].filter(t => {\n            return t.isDone === true;\n          });\n        }\n        if (tl.filter === \"active\") {\n          tasksForToDoList = tasks[tl.id].filter(t => {\n            return t.isDone === false;\n          });\n        }\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todolist\",\n          children: /*#__PURE__*/_jsxDEV(Todolist, {\n            title: tl.title,\n            tasks: tasksForToDoList,\n            removeTask: removeTask,\n            changeFilter: changeFilter,\n            addNewTask: addNewTask,\n            changeChecked: changeChecked,\n            filter: tl.filter,\n            id: tl.id\n          }, tl.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"dKHFH1fsoJApvveEKGxQB1MXGJ8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Todolist","v1","AddItemForm","jsxDEV","_jsxDEV","App","_s","todolistId1","todolistId2","tasks","setTasks","id","title","isDone","todolist","setTodolist","filter","addNewTask","value","trim","length","newTasks","unshift","addNewItemForms","changeChecked","todolistId","currentTask","task","find","el","removeTask","t","changeFilter","map","className","children","fileName","_jsxFileName","lineNumber","columnNumber","tl","tasksForToDoList","_c","$RefreshReg$"],"sources":["/Users/user/Documents/Projects/React:Typescript-project/Todolist/todolist-project/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport { TaskType, Todolist } from './components/Todolist/Todolist/Todolist';\nimport { v1 } from 'uuid';\nimport AddItemForm from './components/AddItemForm/AddItemForm';\n\nexport type FilterValuesType =\"all\" | \"completed\" | \"active\"\nexport type TodolistType = {\n  id:string\n  title:string\n  filter:FilterValuesType\n}\n\nfunction App() {\n  let todolistId1 = v1()\n  let todolistId2 = v1()\n  let [tasks, setTasks]=useState({\n    [todolistId1]:[\n      {id:v1(), title:'CSS', isDone:true},\n      {id:v1(), title:'JS', isDone:true},\n      {id:v1(), title:'React', isDone:false},\n      {id:v1(), title:'Redux', isDone:false}\n    ],\n    [todolistId2]:[\n      {id:v1(), title:'Book', isDone:false},\n      {id:v1(), title:'Milk', isDone:true},\n    ]\n  })\n\n  const[todolist,setTodolist]= useState<Array <TodolistType>>([\n    {id: todolistId1 , title:\"what to learn\", filter: \"active\"},\n    {id: todolistId2, title:\"what to buy\", filter:\"completed\"}\n  ])  \n  const addNewTask= (value:string, id:string) =>{\n    if(value.trim().length!==0){\n      let newTasks = {...tasks}\n      newTasks[id].unshift({id:v1(), title: value.trim(), isDone:false})\n      setTasks(newTasks)\n    }\n  }\n  const addNewItemForms = () =>{\n\n  }\n\n  const changeChecked= (id:string, todolistId:string) =>{\n    let currentTask = tasks[todolistId]\n    let task = currentTask.find((el) => el.id===id)\n    if (task)  task.isDone=!task.isDone\n    setTasks({...tasks})\n  }\n\n  \n  let removeTask = (id:string,todolistId:string)=>{\n    let currentTask = tasks[todolistId]\n    currentTask=currentTask.filter((t:TaskType) => {return (t.id!==id)})\n    tasks[todolistId]=currentTask\n    setTasks({...tasks})\n  }\n\n  let changeFilter = (filter:FilterValuesType, todolistId:string)=>{\n    todolist.map((el)=>{\n      if (el.id===todolistId){\n        el.filter=filter\n        setTodolist([...todolist])\n      }\n    })\n  }\n  return (\n    <div className=\"App\">\n      <AddItemForm/>\n      <div className='container'>\n        {todolist.map((tl)=>{\n          let tasksForToDoList = tasks[tl.id]\n          if(tl.filter===\"completed\"){\n            tasksForToDoList=tasks[tl.id].filter((t:TaskType)=>{return t.isDone===true})\n          }\n        \n          if(tl.filter===\"active\"){\n            tasksForToDoList=tasks[tl.id].filter((t:TaskType)=>{return t.isDone===false})\n          }\n          return (\n            <div className='todolist'>\n              <Todolist \n              key={tl.id}\n              title={tl.title} \n              tasks={tasksForToDoList} \n              removeTask={removeTask}\n              changeFilter={changeFilter}\n              addNewTask={addNewTask}\n              changeChecked={changeChecked}\n              filter={tl.filter}\n              id={tl.id}/>\n            </div>\n            )\n        })}\n      </div>\n    </div>\n  );\n}\n\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}