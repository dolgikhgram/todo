{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/Projects/React:Typescript-project/Todolist/todolist-project/src/components/AddNewTask/AddNewTask.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddNewTask = props => {\n  _s();\n  const [newTask, setNewTask] = useState(\"\");\n  const [error, setError] = useState(false);\n  const CreateNewTask = value => {\n    setNewTask(value);\n    setError(false);\n  };\n  const onNewTitleChangeHandler = e => {\n    CreateNewTask(e.target.value);\n  };\n  const onEnterKeyPressHandler = e => {\n    if (e.charCode === 13) {\n      addNewTask(newTask, id);\n      setNewTask('');\n    }\n  };\n  const addNewTaskHandler = () => {\n    if (newTask.trim().length !== 0) addNewTask(newTask, id);else setError(true);\n    setNewTask('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: onNewTitleChangeHandler,\n      onKeyPress: onEnterKeyPressHandler,\n      value: newTask,\n      className: error ? 'error' : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addNewTaskHandler,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: \"Field is required\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(AddNewTask, \"k2X1jjGgEcjGYReZODI5mDPlk7g=\");\n_c = AddNewTask;\nexport default AddNewTask;\nvar _c;\n$RefreshReg$(_c, \"AddNewTask\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AddNewTask","props","_s","newTask","setNewTask","error","setError","CreateNewTask","value","onNewTitleChangeHandler","e","target","onEnterKeyPressHandler","charCode","addNewTask","id","addNewTaskHandler","trim","length","children","onChange","onKeyPress","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/user/Documents/Projects/React:Typescript-project/Todolist/todolist-project/src/components/AddNewTask/AddNewTask.tsx"],"sourcesContent":["import React,{useState,ChangeEvent,KeyboardEvent} from \"react\"\n\ntype AddNewTaskPropsType = {\n\n}\n\n\nconst AddNewTask  = (props:AddNewTaskPropsType)=>{\n    const [newTask,setNewTask] = useState(\"\")\n    const [error,setError]=useState(false)\n    const CreateNewTask = (value:string)=>{\n        setNewTask(value)\n        setError(false)\n    }\n    const onNewTitleChangeHandler = (e:ChangeEvent<HTMLInputElement>)=>{\n        CreateNewTask(e.target.value)\n    }\n    const onEnterKeyPressHandler = (e:KeyboardEvent<HTMLInputElement>)=>{\n                    if (e.charCode ===13){\n                        addNewTask(newTask,id)\n                        setNewTask('')\n                    }\n                }\n    const addNewTaskHandler  = ()=>{\n        if (newTask.trim().length!==0) addNewTask(newTask,id)\n        else setError(true)\n        setNewTask('')\n    }\n    return (\n        <div>\n                <input \n                onChange={onNewTitleChangeHandler} \n                onKeyPress={onEnterKeyPressHandler}\n                value={newTask}\n                className={ error ? 'error' : ''}/>\n                <button onClick={addNewTaskHandler}>\n                    +\n                </button>\n                {\n                    error&&<div className='error-message'>Field is required</div>\n                }\n            </div>\n    )\n}\n\nexport default AddNewTask"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,QAAiC,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAO9D,MAAMC,UAAU,GAAKC,KAAyB,IAAG;EAAAC,EAAA;EAC7C,MAAM,CAACC,OAAO,EAACC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACzC,MAAM,CAACQ,KAAK,EAACC,QAAQ,CAAC,GAACT,QAAQ,CAAC,KAAK,CAAC;EACtC,MAAMU,aAAa,GAAIC,KAAY,IAAG;IAClCJ,UAAU,CAACI,KAAK,CAAC;IACjBF,QAAQ,CAAC,KAAK,CAAC;EACnB,CAAC;EACD,MAAMG,uBAAuB,GAAIC,CAA+B,IAAG;IAC/DH,aAAa,CAACG,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC;EACjC,CAAC;EACD,MAAMI,sBAAsB,GAAIF,CAAiC,IAAG;IACpD,IAAIA,CAAC,CAACG,QAAQ,KAAI,EAAE,EAAC;MACjBC,UAAU,CAACX,OAAO,EAACY,EAAE,CAAC;MACtBX,UAAU,CAAC,EAAE,CAAC;IAClB;EACJ,CAAC;EACb,MAAMY,iBAAiB,GAAIA,CAAA,KAAI;IAC3B,IAAIb,OAAO,CAACc,IAAI,CAAC,CAAC,CAACC,MAAM,KAAG,CAAC,EAAEJ,UAAU,CAACX,OAAO,EAACY,EAAE,CAAC,MAChDT,QAAQ,CAAC,IAAI,CAAC;IACnBF,UAAU,CAAC,EAAE,CAAC;EAClB,CAAC;EACD,oBACIL,OAAA;IAAAoB,QAAA,gBACQpB,OAAA;MACAqB,QAAQ,EAAEX,uBAAwB;MAClCY,UAAU,EAAET,sBAAuB;MACnCJ,KAAK,EAAEL,OAAQ;MACfmB,SAAS,EAAGjB,KAAK,GAAG,OAAO,GAAG;IAAG;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACnC3B,OAAA;MAAQ4B,OAAO,EAAEX,iBAAkB;MAAAG,QAAA,EAAC;IAEpC;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAELrB,KAAK,iBAAEN,OAAA;MAAKuB,SAAS,EAAC,eAAe;MAAAH,QAAA,EAAC;IAAiB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEhE,CAAC;AAElB,CAAC;AAAAxB,EAAA,CApCKF,UAAU;AAAA4B,EAAA,GAAV5B,UAAU;AAsChB,eAAeA,UAAU;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}