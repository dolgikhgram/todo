{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/Projects/React:Typescript-project/Todolist/todolist-project/src/components/Todolist/Todolist/Todolist.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Todolist.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Todolist = ({\n  title,\n  tasks,\n  removeTask,\n  changeFilter,\n  addNewTask,\n  changeChecked,\n  error,\n  setError\n}) => {\n  _s();\n  const [newTask, setNewTask] = useState(\"\");\n  const [allBtn, setAllBtn] = useState(true);\n  const CreateNewTask = value => {\n    setNewTask(value);\n    setError(false);\n  };\n  const onNewTitleChangeHandler = e => {\n    CreateNewTask(e.target.value);\n  };\n  const onEnterKeyPressHandler = e => {\n    if (e.charCode === 13) {\n      addNewTask(newTask);\n      setNewTask('');\n    }\n  };\n  const addNewTaskHandler = () => {\n    addNewTask(newTask);\n    setNewTask('');\n  };\n  const changeFilterAllHandler = () => changeFilter('all');\n  const changeFilterActiveHandler = () => changeFilter('active');\n  const changeFilterCompletedHandler = () => changeFilter('completed');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: onNewTitleChangeHandler,\n        onKeyPress: onEnterKeyPressHandler,\n        value: newTask,\n        className: error ? 'error' : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addNewTaskHandler,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: \"Field is required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => {\n        const removeTaskHandler = () => {\n          removeTask(task.id);\n        };\n        const changeCheckedHandler = () => {\n          changeChecked(task.id);\n        };\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"error\",\n            checked: task.isDone,\n            onClick: changeCheckedHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: removeTaskHandler,\n            children: \"x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 33\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: changeFilterAllHandler,\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: changeFilterActiveHandler,\n        children: \"Active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: changeFilterCompletedHandler,\n        children: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(Todolist, \"8fOsGZD/XAkco5/3uQemJqsgvho=\");\n_c = Todolist;\nvar _c;\n$RefreshReg$(_c, \"Todolist\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Todolist","title","tasks","removeTask","changeFilter","addNewTask","changeChecked","error","setError","_s","newTask","setNewTask","allBtn","setAllBtn","CreateNewTask","value","onNewTitleChangeHandler","e","target","onEnterKeyPressHandler","charCode","addNewTaskHandler","changeFilterAllHandler","changeFilterActiveHandler","changeFilterCompletedHandler","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onKeyPress","className","onClick","map","task","removeTaskHandler","id","changeCheckedHandler","type","checked","isDone","_c","$RefreshReg$"],"sources":["/Users/user/Documents/Projects/React:Typescript-project/Todolist/todolist-project/src/components/Todolist/Todolist/Todolist.tsx"],"sourcesContent":["import React, { KeyboardEvent,ChangeEvent, useState } from 'react';\nimport { FilterValuesType } from \"../../../App\"\nimport './Todolist.css'\nexport type TaskType = {\n    id:string\n    title:string\n    isDone:boolean\n}\ntype PropsType = {\n    title:string\n    tasks:Array<TaskType>\n    removeTask: (id:string)=> void\n    changeFilter: (filter:FilterValuesType)=> void\n    addNewTask:(value:string)=>void\n    changeChecked:(id:string)=>void\n    error:boolean\n    setError:(boolean:boolean)=>void\n}\n\nexport const Todolist = ({title,tasks,removeTask,changeFilter,addNewTask,changeChecked,error,setError}:PropsType)=>{\n    const [newTask,setNewTask] = useState(\"\")\n    const [allBtn, setAllBtn]=useState(true)\n    const CreateNewTask = (value:string)=>{\n        setNewTask(value)\n        setError(false)\n    }\n    const onNewTitleChangeHandler = (e:ChangeEvent<HTMLInputElement>)=>{\n        CreateNewTask(e.target.value)\n    }\n    const onEnterKeyPressHandler = (e:KeyboardEvent<HTMLInputElement>)=>{\n                    if (e.charCode ===13){\n                        addNewTask(newTask)\n                        setNewTask('')\n                    }\n                }\n    const addNewTaskHandler  = ()=>{\n        addNewTask(newTask)\n        setNewTask('')\n    }\n    const changeFilterAllHandler = () => changeFilter('all')\n    const changeFilterActiveHandler = () => changeFilter('active')\n    const changeFilterCompletedHandler = () => changeFilter('completed')\n    return (\n        <div>\n            <h3>{title}</h3>\n            <div>\n                <input \n                onChange={onNewTitleChangeHandler} \n                onKeyPress={onEnterKeyPressHandler}\n                value={newTask}\n                className={ error ? 'error' : ''}/>\n                <button onClick={addNewTaskHandler}>\n                    +\n                </button>\n                {\n                    error&&<div className='error-message'>Field is required</div>\n                }\n            </div>\n            <ul>\n                {\n                    tasks.map((task)=>{\n\n                        const removeTaskHandler = () => {\n                            removeTask(task.id)\n                        }\n                        const changeCheckedHandler = () =>{\n                            changeChecked(task.id)\n                        }\n\n                        return (\n                            <li key={task.id}>\n                                <input type='checkbox'\n                                className='error'\n                                checked={task.isDone}\n                                onClick={changeCheckedHandler}\n                                />\n                                <span>{task.title}</span>\n                                <button onClick={removeTaskHandler}>x</button>\n                            </li>\n                        )\n                    })\n                }\n            </ul>\n            <div>\n                <button onClick={changeFilterAllHandler}>All</button>\n                <button onClick={changeFilterActiveHandler}>Active</button>\n                <button onClick={changeFilterCompletedHandler}>Completed</button>\n            </div>\n        </div>\n    )\n}\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAA+BC,QAAQ,QAAQ,OAAO;AAElE,OAAO,gBAAgB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAiBvB,OAAO,MAAMC,QAAQ,GAAGA,CAAC;EAACC,KAAK;EAACC,KAAK;EAACC,UAAU;EAACC,YAAY;EAACC,UAAU;EAACC,aAAa;EAACC,KAAK;EAACC;AAAkB,CAAC,KAAG;EAAAC,EAAA;EAC/G,MAAM,CAACC,OAAO,EAACC,UAAU,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACzC,MAAM,CAACe,MAAM,EAAEC,SAAS,CAAC,GAAChB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAMiB,aAAa,GAAIC,KAAY,IAAG;IAClCJ,UAAU,CAACI,KAAK,CAAC;IACjBP,QAAQ,CAAC,KAAK,CAAC;EACnB,CAAC;EACD,MAAMQ,uBAAuB,GAAIC,CAA+B,IAAG;IAC/DH,aAAa,CAACG,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC;EACjC,CAAC;EACD,MAAMI,sBAAsB,GAAIF,CAAiC,IAAG;IACpD,IAAIA,CAAC,CAACG,QAAQ,KAAI,EAAE,EAAC;MACjBf,UAAU,CAACK,OAAO,CAAC;MACnBC,UAAU,CAAC,EAAE,CAAC;IAClB;EACJ,CAAC;EACb,MAAMU,iBAAiB,GAAIA,CAAA,KAAI;IAC3BhB,UAAU,CAACK,OAAO,CAAC;IACnBC,UAAU,CAAC,EAAE,CAAC;EAClB,CAAC;EACD,MAAMW,sBAAsB,GAAGA,CAAA,KAAMlB,YAAY,CAAC,KAAK,CAAC;EACxD,MAAMmB,yBAAyB,GAAGA,CAAA,KAAMnB,YAAY,CAAC,QAAQ,CAAC;EAC9D,MAAMoB,4BAA4B,GAAGA,CAAA,KAAMpB,YAAY,CAAC,WAAW,CAAC;EACpE,oBACIL,OAAA;IAAA0B,QAAA,gBACI1B,OAAA;MAAA0B,QAAA,EAAKxB;IAAK;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAChB9B,OAAA;MAAA0B,QAAA,gBACI1B,OAAA;QACA+B,QAAQ,EAAEd,uBAAwB;QAClCe,UAAU,EAAEZ,sBAAuB;QACnCJ,KAAK,EAAEL,OAAQ;QACfsB,SAAS,EAAGzB,KAAK,GAAG,OAAO,GAAG;MAAG;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACnC9B,OAAA;QAAQkC,OAAO,EAAEZ,iBAAkB;QAAAI,QAAA,EAAC;MAEpC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAELtB,KAAK,iBAAER,OAAA;QAAKiC,SAAS,EAAC,eAAe;QAAAP,QAAA,EAAC;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEhE,CAAC,eACN9B,OAAA;MAAA0B,QAAA,EAEQvB,KAAK,CAACgC,GAAG,CAAEC,IAAI,IAAG;QAEd,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;UAC5BjC,UAAU,CAACgC,IAAI,CAACE,EAAE,CAAC;QACvB,CAAC;QACD,MAAMC,oBAAoB,GAAGA,CAAA,KAAK;UAC9BhC,aAAa,CAAC6B,IAAI,CAACE,EAAE,CAAC;QAC1B,CAAC;QAED,oBACItC,OAAA;UAAA0B,QAAA,gBACI1B,OAAA;YAAOwC,IAAI,EAAC,UAAU;YACtBP,SAAS,EAAC,OAAO;YACjBQ,OAAO,EAAEL,IAAI,CAACM,MAAO;YACrBR,OAAO,EAAEK;UAAqB;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7B,CAAC,eACF9B,OAAA;YAAA0B,QAAA,EAAOU,IAAI,CAAClC;UAAK;YAAAyB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACzB9B,OAAA;YAAQkC,OAAO,EAAEG,iBAAkB;YAAAX,QAAA,EAAC;UAAC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,GAPzCM,IAAI,CAACE,EAAE;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAQZ,CAAC;MAEb,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEN,CAAC,eACL9B,OAAA;MAAA0B,QAAA,gBACI1B,OAAA;QAAQkC,OAAO,EAAEX,sBAAuB;QAAAG,QAAA,EAAC;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACrD9B,OAAA;QAAQkC,OAAO,EAAEV,yBAA0B;QAAAE,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC3D9B,OAAA;QAAQkC,OAAO,EAAET,4BAA6B;QAAAC,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAApB,EAAA,CAvEYT,QAAQ;AAAA0C,EAAA,GAAR1C,QAAQ;AAAA,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}