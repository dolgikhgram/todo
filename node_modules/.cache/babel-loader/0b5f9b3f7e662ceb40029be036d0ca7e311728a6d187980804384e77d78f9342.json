{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/Projects/React:Typescript-project/Todolist/todolist-project/src/components/AddNewTask/AddNewTask.tsx\",\n  _s = $RefreshSig$();\nimport { Button, TextField, Typography } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport \"./AddNewTask.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddNewTask = ({\n  addItem\n}) => {\n  _s();\n  const [newTask, setNewTask] = useState(\"\");\n  const [error, setError] = useState(false);\n  const CreateNewTask = value => {\n    setNewTask(value);\n    setError(false);\n  };\n  const onNewTitleChangeHandler = e => {\n    CreateNewTask(e.target.value);\n  };\n  const onEnterKeyPressHandler = e => {\n    if (e.charCode === 13) {\n      if (newTask.trim().length !== 0) addItem(newTask);else setError(true);\n      setNewTask('');\n    }\n  };\n  const addNewTaskHandler = () => {\n    if (newTask.trim().length !== 0) addItem(newTask);else setError(true);\n    setNewTask('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Type value\",\n      className: \"text-input\",\n      variant: \"standard\",\n      onChange: onNewTitleChangeHandler,\n      onKeyPress: onEnterKeyPressHandler,\n      value: newTask,\n      error: error,\n      maxRows: 4\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: addNewTaskHandler,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this), error && /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"error-message\",\n      children: \"Field is required\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(AddNewTask, \"k2X1jjGgEcjGYReZODI5mDPlk7g=\");\n_c = AddNewTask;\nexport default AddNewTask;\nvar _c;\n$RefreshReg$(_c, \"AddNewTask\");","map":{"version":3,"names":["Button","TextField","Typography","React","useState","jsxDEV","_jsxDEV","AddNewTask","addItem","_s","newTask","setNewTask","error","setError","CreateNewTask","value","onNewTitleChangeHandler","e","target","onEnterKeyPressHandler","charCode","trim","length","addNewTaskHandler","children","label","className","variant","onChange","onKeyPress","maxRows","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/user/Documents/Projects/React:Typescript-project/Todolist/todolist-project/src/components/AddNewTask/AddNewTask.tsx"],"sourcesContent":["import { Button, TextField, Typography } from \"@mui/material\"\nimport React,{useState,ChangeEvent,KeyboardEvent} from \"react\"\nimport  \"./AddNewTask.css\"\n\ntype AddNewTaskPropsType = {\n    addItem:(value:string)=>void\n}\n\n\nconst AddNewTask  = ({addItem}:AddNewTaskPropsType)=>{\n    const [newTask,setNewTask] = useState(\"\")\n    const [error,setError]=useState(false)\n    const CreateNewTask = (value:string)=>{\n        setNewTask(value)\n        setError(false)\n    }\n    const onNewTitleChangeHandler = (e:ChangeEvent<HTMLInputElement>)=>{\n        CreateNewTask(e.target.value)\n    }\n    const onEnterKeyPressHandler = (e:KeyboardEvent<HTMLInputElement>)=>{\n                    if (e.charCode === 13 ){\n                        if (newTask.trim().length!==0) addItem(newTask)\n                        else setError(true)\n                        setNewTask('')\n                    }\n                }\n    const addNewTaskHandler  = ()=>{\n        if (newTask.trim().length!==0) addItem(newTask)\n        else setError(true)\n        setNewTask('')\n    }\n    return (\n        <div>\n                <TextField\n                label=\"Type value\"\n                className=\"text-input\"\n                variant=\"standard\"\n                onChange={onNewTitleChangeHandler} \n                onKeyPress={onEnterKeyPressHandler}\n                value={newTask}\n                error={error}\n                maxRows={4}\n                />\n                <Button onClick={addNewTaskHandler}>\n                    +\n                </Button>\n                {\n                    error&&<Typography className=\"error-message\" >Field is required</Typography>\n                }\n            </div>\n    )\n}\n\nexport default AddNewTask"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,SAAS,EAAEC,UAAU,QAAQ,eAAe;AAC7D,OAAOC,KAAK,IAAEC,QAAQ,QAAiC,OAAO;AAC9D,OAAQ,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAO1B,MAAMC,UAAU,GAAIA,CAAC;EAACC;AAA2B,CAAC,KAAG;EAAAC,EAAA;EACjD,MAAM,CAACC,OAAO,EAACC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACzC,MAAM,CAACQ,KAAK,EAACC,QAAQ,CAAC,GAACT,QAAQ,CAAC,KAAK,CAAC;EACtC,MAAMU,aAAa,GAAIC,KAAY,IAAG;IAClCJ,UAAU,CAACI,KAAK,CAAC;IACjBF,QAAQ,CAAC,KAAK,CAAC;EACnB,CAAC;EACD,MAAMG,uBAAuB,GAAIC,CAA+B,IAAG;IAC/DH,aAAa,CAACG,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC;EACjC,CAAC;EACD,MAAMI,sBAAsB,GAAIF,CAAiC,IAAG;IACpD,IAAIA,CAAC,CAACG,QAAQ,KAAK,EAAE,EAAE;MACnB,IAAIV,OAAO,CAACW,IAAI,CAAC,CAAC,CAACC,MAAM,KAAG,CAAC,EAAEd,OAAO,CAACE,OAAO,CAAC,MAC1CG,QAAQ,CAAC,IAAI,CAAC;MACnBF,UAAU,CAAC,EAAE,CAAC;IAClB;EACJ,CAAC;EACb,MAAMY,iBAAiB,GAAIA,CAAA,KAAI;IAC3B,IAAIb,OAAO,CAACW,IAAI,CAAC,CAAC,CAACC,MAAM,KAAG,CAAC,EAAEd,OAAO,CAACE,OAAO,CAAC,MAC1CG,QAAQ,CAAC,IAAI,CAAC;IACnBF,UAAU,CAAC,EAAE,CAAC;EAClB,CAAC;EACD,oBACIL,OAAA;IAAAkB,QAAA,gBACQlB,OAAA,CAACL,SAAS;MACVwB,KAAK,EAAC,YAAY;MAClBC,SAAS,EAAC,YAAY;MACtBC,OAAO,EAAC,UAAU;MAClBC,QAAQ,EAAEZ,uBAAwB;MAClCa,UAAU,EAAEV,sBAAuB;MACnCJ,KAAK,EAAEL,OAAQ;MACfE,KAAK,EAAEA,KAAM;MACbkB,OAAO,EAAE;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC,eACF5B,OAAA,CAACN,MAAM;MAACmC,OAAO,EAAEZ,iBAAkB;MAAAC,QAAA,EAAC;IAEpC;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAELtB,KAAK,iBAAEN,OAAA,CAACJ,UAAU;MAACwB,SAAS,EAAC,eAAe;MAAAF,QAAA,EAAE;IAAiB;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE/E,CAAC;AAElB,CAAC;AAAAzB,EAAA,CA1CKF,UAAU;AAAA6B,EAAA,GAAV7B,UAAU;AA4ChB,eAAeA,UAAU;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}