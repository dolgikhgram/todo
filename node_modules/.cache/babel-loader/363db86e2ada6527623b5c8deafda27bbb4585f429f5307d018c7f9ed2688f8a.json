{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/Projects/React:Typescript-project/Todolist/todolist-project/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { Todolist } from './components/Todolist/Todolist/Todolist';\nimport { v1 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  let task = [{\n    id: v1(),\n    title: 'CSS',\n    isDone: true\n  }, {\n    id: v1(),\n    title: 'JS',\n    isDone: true\n  }, {\n    id: v1(),\n    title: 'React',\n    isDone: false\n  }, {\n    id: v1(),\n    title: 'Redux',\n    isDone: false\n  }];\n  let [tasks, setTasks] = useState(task);\n  let [filter, setFilter] = useState(\"all\");\n  let [error, setError] = useState(false);\n  const addNewTask = value => {\n    if (value.trim().length !== 0) {\n      let newTasks = [...tasks];\n      newTasks.unshift({\n        id: v1(),\n        title: value.trim(),\n        isDone: false\n      });\n      setTasks(newTasks);\n      setError(false);\n    } else {\n      setError(true);\n    }\n  };\n  const changeChecked = id => {\n    let task = tasks.find(el => el.id === id);\n    if (task) task.isDone = !task.isDone;\n    let newTasks = [...tasks];\n    setTasks(newTasks);\n  };\n  let tasksForToDoList = tasks;\n  if (filter === \"completed\") {\n    tasksForToDoList = tasks.filter(t => {\n      return t.isDone === true;\n    });\n  }\n  if (filter === \"active\") {\n    tasksForToDoList = tasks.filter(t => {\n      return t.isDone === false;\n    });\n  }\n  let removeTask = id => {\n    setTasks(tasks = tasks.filter(t => {\n      return t.id !== id;\n    }));\n  };\n  let changeFilter = filter => {\n    setFilter(filter);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Todolist, {\n      title: 'What to learn',\n      tasks: tasksForToDoList,\n      removeTask: removeTask,\n      changeFilter: changeFilter,\n      addNewTask: addNewTask,\n      changeChecked: changeChecked,\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"6MAhCR3O6vdSlqvyikmtmOGee2A=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Todolist","v1","jsxDEV","_jsxDEV","App","_s","task","id","title","isDone","tasks","setTasks","filter","setFilter","error","setError","addNewTask","value","trim","length","newTasks","unshift","changeChecked","find","el","tasksForToDoList","t","removeTask","changeFilter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/user/Documents/Projects/React:Typescript-project/Todolist/todolist-project/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport { TaskType, Todolist } from './components/Todolist/Todolist/Todolist';\nimport { v1 } from 'uuid';\n\nexport type FilterValuesType =\"all\" | \"completed\" | \"active\"\n\nfunction App() {\n  let task = [\n    {id:v1(), title:'CSS', isDone:true},\n    {id:v1(), title:'JS', isDone:true},\n    {id:v1(), title:'React', isDone:false},\n    {id:v1(), title:'Redux', isDone:false}\n  ]\n\n  let [tasks,setTasks]=useState< Array <TaskType> >(task)\n  let [filter,setFilter] = useState< FilterValuesType >(\"all\")\n  let [error,setError]=useState(false)\n  \n  const addNewTask= (value:string) =>{\n    if(value.trim().length!==0){\n      let newTasks = [...tasks]\n      newTasks.unshift({id:v1(), title: value.trim(), isDone:false})\n      setTasks(newTasks)\n      setError(false)\n    }else{\n      setError(true)\n    }\n  }\n\n  const changeChecked= (id:string) =>{\n    let task = tasks.find((el) => el.id===id)\n    if (task)  task.isDone=!task.isDone\n    let newTasks=[...tasks]\n    setTasks(newTasks)\n  }\n\n  let tasksForToDoList = tasks\n  if(filter===\"completed\"){\n    tasksForToDoList=tasks.filter((t:TaskType)=>{return t.isDone===true})\n  }\n\n  if(filter===\"active\"){\n    tasksForToDoList=tasks.filter((t:TaskType)=>{return t.isDone===false})\n  }\n  \n  let removeTask = (id:string)=>{\n    setTasks(tasks=tasks.filter((t:TaskType) => {return (t.id!==id)}))\n  }\n\n  let changeFilter = (filter:FilterValuesType)=>{\n    setFilter(filter)\n  }\n  return (\n    <div className=\"App\">\n      <Todolist title={'What to learn'} \n        tasks={tasksForToDoList} \n        removeTask={removeTask}\n        changeFilter={changeFilter}\n        addNewTask={addNewTask}\n        changeChecked={changeChecked}\n        error={error}/>\n    </div>\n  );\n}\n\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}