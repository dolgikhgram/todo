{"ast":null,"code":"import{v1}from\"uuid\";import{todolistId1}from\"./todolists-reducer\";const initialState={[todolistId1]:[{id:v1(),title:'Тестовое задание',isDone:false},{id:v1(),title:'Прекрасный код',isDone:true},{id:v1(),title:'Покрытие тестами',isDone:false}]};export const tasksReducer=function(){let state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;let action=arguments.length>1?arguments[1]:undefined;switch(action.type){case'REMOVE-TASK':{const stateCopy={...state};const tasks=stateCopy[action.todolistId];const filteredTasks=tasks.filter(t=>t.id!==action.taskId);stateCopy[action.todolistId]=filteredTasks;return{...stateCopy};}case'REMOVE-TASK-COMPLETED':{const stateCopy={...state};const tasks=stateCopy[action.todolistId];const filteredTasks=tasks.filter(t=>!t.isDone);stateCopy[action.todolistId]=filteredTasks;return stateCopy;}case'ADD-TASK':{if(action.title.trim().length!==0){const stateCopy={...state};const tasks=stateCopy[action.todolistId];const newTask={id:v1(),title:action.title,isDone:false};const newTasks=[newTask,...tasks];stateCopy[action.todolistId]=newTasks;return stateCopy;}return{...state};}case'CHANGE-CHEKED-TASK':{let copyState={...state};copyState[action.todolistId].map(el=>{if(el.id===action.taskId){if(el){el.isDone=action.isDone;}}});return copyState;}case'CHANGE-TASK-TITLE':{const copyState={...state};if(action.title.trim().length!==0){copyState[action.todolistId].forEach(el=>{if(el.id===action.taskId){el.title=action.title;}});}return{...copyState};}case'ADD-TOODOLIST':{const stateCopy={...state};stateCopy[action.todolistId]=[];return stateCopy;}case'REMOVE-TODOLIST':{const stateCopy={...state};delete stateCopy[action.id];return stateCopy;}default:return state;}};export const removeTaskAC=(todolistId,taskId)=>{return{type:'REMOVE-TASK',todolistId:todolistId,taskId:taskId};};export const addTaskAC=(todolistId,title)=>{return{type:'ADD-TASK',todolistId:todolistId,title:title};};export const changeCheckedTaskAC=(todolistId,taskId,isDone)=>{return{type:'CHANGE-CHEKED-TASK',todolistId:todolistId,taskId:taskId,isDone:isDone};};export const changeTaskTitleAC=(todolistId,taskId,title)=>{return{type:'CHANGE-TASK-TITLE',todolistId:todolistId,taskId:taskId,title:title};};export const removeTaskCompletedAC=todolistId=>{return{type:'REMOVE-TASK-COMPLETED',todolistId:todolistId};};","map":{"version":3,"names":["v1","todolistId1","initialState","id","title","isDone","tasksReducer","state","arguments","length","undefined","action","type","stateCopy","tasks","todolistId","filteredTasks","filter","t","taskId","trim","newTask","newTasks","copyState","map","el","forEach","removeTaskAC","addTaskAC","changeCheckedTaskAC","changeTaskTitleAC","removeTaskCompletedAC"],"sources":["/Users/user/Documents/Projects/React:Typescript-project/Todolist/todolist-project/src/state/tasks-reducer.ts"],"sourcesContent":["import { v1 } from \"uuid\"\nimport { AddTodolistActionType, RemoveTodolistActionType, todolistId1, todolistId2 } from \"./todolists-reducer\"\nimport { TaskStateType } from \"../AppWithRedux\"\nexport type  ActionRemoveTaskType={\n    type: 'REMOVE-TASK'\n    todolistId:string\n    taskId:string\n}\nexport type ActionAddTaskType = {\n    type: 'ADD-TASK'\n    todolistId:string\n    title:string\n}\nexport type ChangeCheckedTaskActionType = {\n    type: 'CHANGE-CHEKED-TASK'\n    todolistId:string\n    taskId:string\n    isDone:boolean\n}\nexport type ChangeTaskTitleActionType = {\n    type: 'CHANGE-TASK-TITLE'\n    todolistId:string, \n    taskId:string, \n    title:string\n}\nexport type  ActionRemoveCompletedType={\n    type: 'REMOVE-TASK-COMPLETED'\n    todolistId:string\n}\n\nconst initialState: TaskStateType = {\n    [todolistId1]:[\n        {id:v1(), title:'Тестовое задание', isDone:false},\n        {id:v1(), title:'Прекрасный код', isDone:true},\n        {id:v1(), title:'Покрытие тестами', isDone:false},\n    ]\n}\nexport type ActionsTypes  = ActionRemoveTaskType |  ActionAddTaskType |  ChangeCheckedTaskActionType | ChangeTaskTitleActionType | AddTodolistActionType | RemoveTodolistActionType | ActionRemoveCompletedType\nexport const tasksReducer = (state: TaskStateType = initialState, action: ActionsTypes): TaskStateType => {\n    switch(action.type){\n        case 'REMOVE-TASK': {\n            const stateCopy = {...state}\n            const tasks = stateCopy[action.todolistId]\n            const filteredTasks = tasks.filter(t=>t.id!== action.taskId)\n            stateCopy[action.todolistId]=filteredTasks\n            return {...stateCopy}\n        }\n        case 'REMOVE-TASK-COMPLETED': {\n            const stateCopy = {...state}\n            const tasks = stateCopy[action.todolistId]\n            const filteredTasks = tasks.filter(t=>!t.isDone)\n            stateCopy[action.todolistId]=filteredTasks\n            return stateCopy\n        }\n\n        case 'ADD-TASK':{\n            if(action.title.trim().length!==0){\n                const stateCopy = {...state}\n                const tasks = stateCopy[action.todolistId]\n                const newTask = {id:v1(), title:action.title, isDone:false}\n                const newTasks = [newTask,...tasks]\n                stateCopy[action.todolistId]=newTasks\n                return stateCopy\n            }\n            return {...state}\n        }\n        case 'CHANGE-CHEKED-TASK':{\n            let copyState ={...state}\n            copyState[action.todolistId].map((el)=>{\n                if(el.id===action.taskId){\n                    if (el) {\n                        el.isDone= action.isDone\n                    }\n                }\n            })\n            return copyState\n        }\n        case 'CHANGE-TASK-TITLE':{\n            const copyState  = {...state}\n            if(action.title.trim().length!==0){\n                copyState[action.todolistId].forEach((el)=>{\n                    if (el.id===action.taskId){\n                    el.title=action.title\n                    }\n                })\n            }\n            return {...copyState}\n        }\n        case  'ADD-TOODOLIST':{\n            const stateCopy = {...state}\n            stateCopy[action.todolistId]=[]\n            return stateCopy\n        }\n        case 'REMOVE-TODOLIST' : {\n            const stateCopy = {...state}\n            delete stateCopy[action.id]\n            return stateCopy\n        }\n        default:\n            return state\n    }\n}\nexport const removeTaskAC  = (todolistId:string, taskId:string):ActionRemoveTaskType =>{\n    return { type:'REMOVE-TASK', todolistId: todolistId, taskId: taskId}\n}\nexport const addTaskAC = (todolistId:string, title:string):ActionAddTaskType =>{\n    return {type: 'ADD-TASK',todolistId: todolistId , title:title}\n}\nexport const changeCheckedTaskAC = (todolistId:string, taskId:string, isDone:boolean):ChangeCheckedTaskActionType =>{\n    return {type: 'CHANGE-CHEKED-TASK',todolistId: todolistId , taskId:taskId, isDone:isDone}\n}\nexport const  changeTaskTitleAC = (todolistId:string, taskId:string, title:string):ChangeTaskTitleActionType =>{\n    return {type: 'CHANGE-TASK-TITLE',todolistId: todolistId , taskId:taskId, title:title}\n}\n\nexport const removeTaskCompletedAC  = (todolistId:string):ActionRemoveCompletedType =>{\n    return { type:'REMOVE-TASK-COMPLETED', todolistId: todolistId}\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}