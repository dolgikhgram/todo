{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/Projects/React:Typescript-project/Todolist/todolist-project/src/components/Todolist/Todolist/Todolist.tsx\";\nimport React from 'react';\nimport './Todolist.css';\nimport AddNewTask from '../../AddNewTask/AddNewTask';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditableSpan from '../../EditableSpan/EditableSpan';\nimport { Button, IconButton } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Todolist = ({\n  title,\n  tasks,\n  removeTask,\n  changeFilter,\n  addNewTask,\n  changeChecked,\n  filter,\n  id,\n  deleteTask,\n  changeTaskTitle,\n  changeTodolistTitle\n}) => {\n  const changeFilterAllHandler = () => {\n    changeFilter('all', id);\n  };\n  const changeFilterActiveHandler = () => {\n    changeFilter('active', id);\n  };\n  const changeFilterCompletedHandler = () => {\n    changeFilter('completed', id);\n  };\n  const deleteTaskHandler = () => {\n    deleteTask(id);\n  };\n  const addTask = title => {\n    addNewTask(title, id);\n  };\n  const onChangeTodolistTitelHandler = newValue => {\n    changeTodolistTitle(id, newValue);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"name-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: /*#__PURE__*/_jsxDEV(EditableSpan, {\n          title: title,\n          isDone: false,\n          onChange: onChangeTodolistTitelHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"btn-delete-task\",\n        onClick: deleteTaskHandler,\n        children: \"x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AddNewTask, {\n      addItem: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => {\n        const removeTaskHandler = () => {\n          removeTask(task.id, id);\n        };\n        const changeCheckedHandler = () => {\n          changeChecked(task.id, id);\n        };\n        const onChangeTaskTitleHandler = newValue => {\n          changeTaskTitle(task.id, id, newValue);\n        };\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: task.isDone ? 'is-done' : '',\n            checked: task.isDone,\n            onClick: changeCheckedHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(EditableSpan, {\n            title: task.title,\n            isDone: task.isDone,\n            onChange: onChangeTaskTitleHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: removeTaskHandler,\n            children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n              fontSize: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 33\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: changeFilterAllHandler,\n        variant: filter === 'all' ? 'contained' : 'text',\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: changeFilterActiveHandler,\n        variant: filter === 'active' ? 'contained' : 'text',\n        children: \"Active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: changeFilterCompletedHandler,\n        variant: filter === 'completed' ? 'contained' : 'text',\n        children: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_c = Todolist;\nvar _c;\n$RefreshReg$(_c, \"Todolist\");","map":{"version":3,"names":["React","AddNewTask","DeleteIcon","EditableSpan","Button","IconButton","jsxDEV","_jsxDEV","Todolist","title","tasks","removeTask","changeFilter","addNewTask","changeChecked","filter","id","deleteTask","changeTaskTitle","changeTodolistTitle","changeFilterAllHandler","changeFilterActiveHandler","changeFilterCompletedHandler","deleteTaskHandler","addTask","onChangeTodolistTitelHandler","newValue","children","className","isDone","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","addItem","map","task","removeTaskHandler","changeCheckedHandler","onChangeTaskTitleHandler","type","checked","fontSize","variant","_c","$RefreshReg$"],"sources":["/Users/user/Documents/Projects/React:Typescript-project/Todolist/todolist-project/src/components/Todolist/Todolist/Todolist.tsx"],"sourcesContent":["import React from 'react';\nimport { FilterValuesType } from \"../../../App\"\nimport './Todolist.css'\nimport AddNewTask from '../../AddNewTask/AddNewTask';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditableSpan from '../../EditableSpan/EditableSpan';\nimport { Button, IconButton } from '@mui/material';\nexport type TaskType = {\n    id:string\n    title:string\n    isDone:boolean\n}\ntype PropsType = {\n    title:string\n    tasks:Array<TaskType>\n    removeTask: (id:string, todolistId:string)=> void\n    changeFilter: (filter:FilterValuesType, todolistId:string)=> void\n    addNewTask:(value:string,id:string)=>void\n    changeChecked:(id:string,todolistId:string)=>void\n    filter:FilterValuesType\n    id:string\n    deleteTask:(id:string)=>void\n    changeTaskTitle:(taskId:string,todolistId:string, newValue:string)=>void\n    changeTodolistTitle:(todolistId:string, newValue:string)=>void\n}\n\nexport const Todolist = ({title,tasks,removeTask,changeFilter,addNewTask,changeChecked,filter, id,deleteTask,changeTaskTitle,changeTodolistTitle}:PropsType)=>{\n    \n    const changeFilterAllHandler = () => {\n        changeFilter('all',id)\n    }\n    const changeFilterActiveHandler = () => {\n        changeFilter('active',id)\n    }\n    \n    const changeFilterCompletedHandler = () => {\n        changeFilter('completed',id)\n    }\n\n    const deleteTaskHandler = () =>{\n        deleteTask(id)\n    }\n\n    const addTask = (title:string)=>{\n        addNewTask(title, id)\n    }\n\n    const onChangeTodolistTitelHandler = (newValue:string)=>{\n        changeTodolistTitle(id,newValue)\n    }\n\n    return (\n        <div>\n            <div className='name-container'>\n                <h3>\n                    <EditableSpan \n                    title={title} \n                    isDone={false} \n                    onChange={onChangeTodolistTitelHandler}/>\n                </h3>\n                <Button\n                    className='btn-delete-task'\n                    onClick={deleteTaskHandler}>x</Button>\n            </div>\n            <AddNewTask addItem={addTask}/>\n            <ul>\n                {\n                    tasks.map((task)=>{\n\n                        const removeTaskHandler = () => {\n                            removeTask(task.id,id)\n                        }\n                        const changeCheckedHandler = () =>{\n                            changeChecked(task.id, id)\n                        }\n                        const onChangeTaskTitleHandler=(newValue:string)=>{\n                            changeTaskTitle(task.id,id,newValue)\n                        }\n\n                        return (\n                            <li key={task.id}>\n                                <input type='checkbox'\n                                className={task.isDone ? 'is-done' : ''}\n                                checked={task.isDone}\n                                onClick={changeCheckedHandler}\n                                />\n                                <EditableSpan title={task.title} \n                                isDone={task.isDone} \n                                onChange={onChangeTaskTitleHandler}/>\n                                <IconButton onClick={removeTaskHandler}>\n                                    <DeleteIcon  fontSize=\"small\" />\n                                </IconButton>\n                            </li>\n                        )\n                    })\n                }\n            </ul>\n            <div>\n                <Button onClick={changeFilterAllHandler} \n                    variant={filter==='all' ? 'contained' : 'text'}>\n                    All\n                </Button>\n                <Button onClick={changeFilterActiveHandler}\n                    variant={filter==='active' ? 'contained' : 'text'}>\n                    Active\n                </Button>\n                <Button onClick={changeFilterCompletedHandler}\n                    variant={filter==='completed' ? 'contained' : 'text'}>\n                    Completed\n                </Button>\n            </div>\n        </div>\n    )\n}\n\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}