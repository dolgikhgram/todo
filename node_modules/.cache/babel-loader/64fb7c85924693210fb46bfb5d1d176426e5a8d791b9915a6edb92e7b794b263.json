{"ast":null,"code":"import{IconButton,TextField}from\"@mui/material\";import React,{useState}from\"react\";import AddCircleOutlineIcon from'@mui/icons-material/AddCircleOutline';import\"./AddNewTask.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AddNewTask=/*#__PURE__*/React.memo(_ref=>{let{addItem}=_ref;const[newTask,setNewTask]=useState(\"\");const[error,setError]=useState(false);const CreateNewTask=value=>{setNewTask(value);if(error)setError(false);};const onNewTitleChangeHandler=e=>{CreateNewTask(e.target.value);};const onEnterKeyPressHandler=e=>{if(e.charCode===13){if(newTask.trim().length!==0)addItem(newTask);else setError(true);setNewTask('');}};const addNewTaskHandler=()=>{if(newTask.trim().length!==0)addItem(newTask);else setError(true);setNewTask('');};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(TextField,{label:\"Type value\",className:\"text-input\",color:\"secondary\",variant:\"standard\",helperText:error?'Field is required':'',onChange:onNewTitleChangeHandler,onKeyPress:onEnterKeyPressHandler,value:newTask,error:error,maxRows:4}),/*#__PURE__*/_jsx(IconButton,{onClick:addNewTaskHandler,children:/*#__PURE__*/_jsx(AddCircleOutlineIcon,{})})]});});export default AddNewTask;","map":{"version":3,"names":["IconButton","TextField","React","useState","AddCircleOutlineIcon","jsx","_jsx","jsxs","_jsxs","AddNewTask","memo","_ref","addItem","newTask","setNewTask","error","setError","CreateNewTask","value","onNewTitleChangeHandler","e","target","onEnterKeyPressHandler","charCode","trim","length","addNewTaskHandler","children","label","className","color","variant","helperText","onChange","onKeyPress","maxRows","onClick"],"sources":["/Users/user/Documents/Projects/React:Typescript-project/Todolist/todolist-project/src/components/AddNewTask/AddNewTask.tsx"],"sourcesContent":["import {IconButton, TextField} from \"@mui/material\"\nimport React,{useState,ChangeEvent,KeyboardEvent} from \"react\"\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\nimport  \"./AddNewTask.css\" \n\ntype AddNewTaskPropsType = {\n    addItem:(value:string)=>void\n}\n\n\nconst AddNewTask  = React.memo(({addItem}:AddNewTaskPropsType)=>{\n    const [newTask,setNewTask] = useState(\"\")\n    const [error,setError]=useState(false)\n    const CreateNewTask = (value:string)=>{\n        setNewTask(value)\n        if (error) setError(false)\n    }\n    const onNewTitleChangeHandler = (e:ChangeEvent<HTMLInputElement>)=>{\n        CreateNewTask(e.target.value)\n    }\n    const onEnterKeyPressHandler = (e:KeyboardEvent<HTMLInputElement>)=>{\n                    if (e.charCode === 13 ){\n                        if (newTask.trim().length!==0) addItem(newTask)\n                        else setError(true)\n                        setNewTask('')\n                    }\n                }\n    const addNewTaskHandler  = ()=>{\n        if (newTask.trim().length!==0) addItem(newTask)\n        else setError(true)\n        setNewTask('')\n    }\n    return (\n        <div>\n                <TextField\n                label=\"Type value\"\n                className=\"text-input\"\n                color=\"secondary\"\n                variant=\"standard\"\n                helperText={ error ?'Field is required' : ''}\n                onChange={onNewTitleChangeHandler} \n                onKeyPress={onEnterKeyPressHandler}\n                value={newTask}\n                error={error}\n                maxRows={4}\n                />\n                <IconButton onClick={addNewTaskHandler}>\n                    <AddCircleOutlineIcon/>\n                </IconButton>\n            </div>\n    )\n})\n\nexport default AddNewTask"],"mappings":"AAAA,OAAQA,UAAU,CAAEC,SAAS,KAAO,eAAe,CACnD,MAAO,CAAAC,KAAK,EAAEC,QAAQ,KAAiC,OAAO,CAC9D,MAAO,CAAAC,oBAAoB,KAAM,sCAAsC,CACvE,MAAQ,kBAAkB,QAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAO1B,KAAM,CAAAC,UAAU,cAAIP,KAAK,CAACQ,IAAI,CAACC,IAAA,EAAiC,IAAhC,CAACC,OAA2B,CAAC,CAAAD,IAAA,CACzD,KAAM,CAACE,OAAO,CAACC,UAAU,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CACzC,KAAM,CAACY,KAAK,CAACC,QAAQ,CAAC,CAACb,QAAQ,CAAC,KAAK,CAAC,CACtC,KAAM,CAAAc,aAAa,CAAIC,KAAY,EAAG,CAClCJ,UAAU,CAACI,KAAK,CAAC,CACjB,GAAIH,KAAK,CAAEC,QAAQ,CAAC,KAAK,CAAC,CAC9B,CAAC,CACD,KAAM,CAAAG,uBAAuB,CAAIC,CAA+B,EAAG,CAC/DH,aAAa,CAACG,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC,CACjC,CAAC,CACD,KAAM,CAAAI,sBAAsB,CAAIF,CAAiC,EAAG,CACpD,GAAIA,CAAC,CAACG,QAAQ,GAAK,EAAE,CAAE,CACnB,GAAIV,OAAO,CAACW,IAAI,CAAC,CAAC,CAACC,MAAM,GAAG,CAAC,CAAEb,OAAO,CAACC,OAAO,CAAC,KAC1C,CAAAG,QAAQ,CAAC,IAAI,CAAC,CACnBF,UAAU,CAAC,EAAE,CAAC,CAClB,CACJ,CAAC,CACb,KAAM,CAAAY,iBAAiB,CAAIA,CAAA,GAAI,CAC3B,GAAIb,OAAO,CAACW,IAAI,CAAC,CAAC,CAACC,MAAM,GAAG,CAAC,CAAEb,OAAO,CAACC,OAAO,CAAC,KAC1C,CAAAG,QAAQ,CAAC,IAAI,CAAC,CACnBF,UAAU,CAAC,EAAE,CAAC,CAClB,CAAC,CACD,mBACIN,KAAA,QAAAmB,QAAA,eACQrB,IAAA,CAACL,SAAS,EACV2B,KAAK,CAAC,YAAY,CAClBC,SAAS,CAAC,YAAY,CACtBC,KAAK,CAAC,WAAW,CACjBC,OAAO,CAAC,UAAU,CAClBC,UAAU,CAAGjB,KAAK,CAAE,mBAAmB,CAAG,EAAG,CAC7CkB,QAAQ,CAAEd,uBAAwB,CAClCe,UAAU,CAAEZ,sBAAuB,CACnCJ,KAAK,CAAEL,OAAQ,CACfE,KAAK,CAAEA,KAAM,CACboB,OAAO,CAAE,CAAE,CACV,CAAC,cACF7B,IAAA,CAACN,UAAU,EAACoC,OAAO,CAAEV,iBAAkB,CAAAC,QAAA,cACnCrB,IAAA,CAACF,oBAAoB,GAAC,CAAC,CACf,CAAC,EACZ,CAAC,CAElB,CAAC,CAAC,CAEF,cAAe,CAAAK,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}