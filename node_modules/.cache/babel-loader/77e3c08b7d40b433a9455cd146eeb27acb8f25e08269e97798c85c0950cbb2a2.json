{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/Projects/React:Typescript-project/Todolist/todolist-project/src/components/AddNewTask/AddNewTask.tsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddNewTask = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: onNewTitleChangeHandler,\n      onKeyPress: onEnterKeyPressHandler,\n      value: newTask,\n      className: error ? 'error' : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addNewTaskHandler,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: \"Field is required\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n_c = AddNewTask;\nexport default AddNewTask;\nvar _c;\n$RefreshReg$(_c, \"AddNewTask\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","AddNewTask","props","children","onChange","onNewTitleChangeHandler","onKeyPress","onEnterKeyPressHandler","value","newTask","className","error","fileName","_jsxFileName","lineNumber","columnNumber","onClick","addNewTaskHandler","_c","$RefreshReg$"],"sources":["/Users/user/Documents/Projects/React:Typescript-project/Todolist/todolist-project/src/components/AddNewTask/AddNewTask.tsx"],"sourcesContent":["import React from \"react\"\n\ntype AddNewTaskPropsType = {\n    \n}\n\n\nconst AddNewTask  = (props:AddNewTaskPropsType)=>{\n    return (\n        <div>\n                <input \n                onChange={onNewTitleChangeHandler} \n                onKeyPress={onEnterKeyPressHandler}\n                value={newTask}\n                className={ error ? 'error' : ''}/>\n                <button onClick={addNewTaskHandler}>\n                    +\n                </button>\n                {\n                    error&&<div className='error-message'>Field is required</div>\n                }\n            </div>\n    )\n}\n\nexport default AddNewTask"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAOzB,MAAMC,UAAU,GAAKC,KAAyB,IAAG;EAC7C,oBACIF,OAAA;IAAAG,QAAA,gBACQH,OAAA;MACAI,QAAQ,EAAEC,uBAAwB;MAClCC,UAAU,EAAEC,sBAAuB;MACnCC,KAAK,EAAEC,OAAQ;MACfC,SAAS,EAAGC,KAAK,GAAG,OAAO,GAAG;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACnCf,OAAA;MAAQgB,OAAO,EAAEC,iBAAkB;MAAAd,QAAA,EAAC;IAEpC;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAELJ,KAAK,iBAAEX,OAAA;MAAKU,SAAS,EAAC,eAAe;MAAAP,QAAA,EAAC;IAAiB;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEhE,CAAC;AAElB,CAAC;AAAAG,EAAA,GAhBKjB,UAAU;AAkBhB,eAAeA,UAAU;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}