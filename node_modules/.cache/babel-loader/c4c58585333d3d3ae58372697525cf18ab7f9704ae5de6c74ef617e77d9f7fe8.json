{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/Projects/React:Typescript-project/Todolist/todolist-project/src/components/Todolist/Todolist/Todolist.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './Todolist.css';\nimport AddNewTask from '../../AddNewTask/AddNewTask';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditableSpan from '../../EditableSpan/EditableSpan';\nimport { Button, Checkbox, IconButton, Typography, Box } from '@mui/material';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { addTaskAC, changeCheckedTaskAC, changeTaskTitleAC, removeTaskAC } from '../../../state/tasks-reducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Todolist = ({\n  title,\n  changeFilter,\n  filter,\n  id,\n  removeTodolist,\n  changeTodolistTitle\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const tasks = useSelector(state => state.tasks);\n  const changeFilterAllHandler = () => {\n    changeFilter('all', id);\n  };\n  const changeFilterActiveHandler = () => {\n    changeFilter('active', id);\n  };\n  const changeFilterCompletedHandler = () => {\n    changeFilter('completed', id);\n  };\n  const deleteTaskHandler = () => {\n    removeTodolist(id);\n  };\n  const addTask = title => {\n    dispatch(addTaskAC(id, title));\n  };\n  const onChangeTodolistTitelHandler = newValue => {\n    changeTodolistTitle(id, newValue);\n  };\n  let allTodolistTasks = tasks[id];\n  let tasksForToDoList = allTodolistTasks;\n  if (filter === \"completed\") {\n    tasksForToDoList = allTodolistTasks.filter(t => {\n      return t.isDone === true;\n    });\n  }\n  if (filter === \"active\") {\n    tasksForToDoList = allTodolistTasks.filter(t => {\n      return t.isDone === false;\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"name-container\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: /*#__PURE__*/_jsxDEV(EditableSpan, {\n          title: title,\n          isDone: false,\n          onChange: onChangeTodolistTitelHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: deleteTaskHandler,\n        children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n          fontSize: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AddNewTask, {\n      addItem: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasksForToDoList.map(task => {\n        const removeTaskHandler = () => {\n          dispatch(removeTaskAC(id, task.id));\n        };\n        const changeCheckedHandler = e => {\n          dispatch(changeCheckedTaskAC(id, task.id, e.target.checked));\n        };\n        const onChangeTaskTitleHandler = newValue => {\n          dispatch(changeTaskTitleAC(id, task.id, newValue));\n        };\n        return /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n            color: \"success\",\n            checked: task.isDone,\n            onClick: e => changeCheckedHandler(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(EditableSpan, {\n            title: task.title,\n            isDone: task.isDone,\n            onChange: onChangeTaskTitleHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: removeTaskHandler,\n            children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n              fontSize: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 33\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: changeFilterAllHandler,\n        variant: filter === 'all' ? 'contained' : 'text',\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: changeFilterActiveHandler,\n        color: \"success\",\n        variant: filter === 'active' ? 'contained' : 'text',\n        children: \"Active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: changeFilterCompletedHandler,\n        color: \"secondary\",\n        variant: filter === 'completed' ? 'contained' : 'text',\n        children: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n_s(Todolist, \"aP2UNkZhVw38GB/i/zZWvGZ+Vls=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Todolist;\nvar _c;\n$RefreshReg$(_c, \"Todolist\");","map":{"version":3,"names":["React","AddNewTask","DeleteIcon","EditableSpan","Button","Checkbox","IconButton","Typography","Box","useSelector","useDispatch","addTaskAC","changeCheckedTaskAC","changeTaskTitleAC","removeTaskAC","jsxDEV","_jsxDEV","Todolist","title","changeFilter","filter","id","removeTodolist","changeTodolistTitle","_s","dispatch","tasks","state","changeFilterAllHandler","changeFilterActiveHandler","changeFilterCompletedHandler","deleteTaskHandler","addTask","onChangeTodolistTitelHandler","newValue","allTodolistTasks","tasksForToDoList","t","isDone","children","className","variant","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","fontSize","addItem","map","task","removeTaskHandler","changeCheckedHandler","e","target","checked","onChangeTaskTitleHandler","color","_c","$RefreshReg$"],"sources":["/Users/user/Documents/Projects/React:Typescript-project/Todolist/todolist-project/src/components/Todolist/Todolist/Todolist.tsx"],"sourcesContent":["import React from 'react';\nimport { FilterValuesType, TaskStateType } from \"../../../App\"\nimport './Todolist.css'\nimport AddNewTask from '../../AddNewTask/AddNewTask';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditableSpan from '../../EditableSpan/EditableSpan';\nimport { Button, Checkbox, IconButton, Typography,Box} from '@mui/material';\nimport { useSelector } from 'react-redux';\nimport { AppRootState } from '../../../state/store';\nimport { useDispatch } from 'react-redux';\nimport { addTaskAC, changeCheckedTaskAC, changeTaskTitleAC, removeTaskAC } from '../../../state/tasks-reducer';\nexport type TaskType = {\n    id:string\n    title:string\n    isDone:boolean\n}\ntype PropsType = {\n    title:string\n    changeFilter: (filter:FilterValuesType, todolistId:string)=> void\n    filter:FilterValuesType\n    id:string\n    removeTodolist:(id:string)=>void\n    changeTodolistTitle:(todolistId:string, newValue:string)=>void\n}\nexport const Todolist = ({title, changeFilter,  filter, id, removeTodolist, changeTodolistTitle}:PropsType)=>{\n    const dispatch = useDispatch()\n    const tasks = useSelector<AppRootState, TaskStateType>(state=>state.tasks)\n\n    const changeFilterAllHandler = () => {\n        changeFilter('all',id)\n    }\n    const changeFilterActiveHandler = () => {\n        changeFilter('active',id)\n    }\n    \n    const changeFilterCompletedHandler = () => {\n        changeFilter('completed',id)\n    }\n    const deleteTaskHandler = () =>{\n        removeTodolist(id)\n    }\n    const addTask = (title:string)=>{\n        dispatch(addTaskAC(id,title))\n    }\n    const onChangeTodolistTitelHandler = (newValue:string)=>{\n        changeTodolistTitle(id,newValue)\n    }\n    let allTodolistTasks = tasks[id]\n    let tasksForToDoList = allTodolistTasks\n    if(filter===\"completed\"){\n        tasksForToDoList=allTodolistTasks.filter((t:TaskType)=>{return t.isDone===true})\n    }\n    if(filter===\"active\"){\n        tasksForToDoList=allTodolistTasks.filter((t:TaskType)=>{return t.isDone===false})\n    }\n    return (\n        <div>\n            <div className='name-container'>\n                <Typography variant=\"h6\">\n                    <EditableSpan \n                        title={title} \n                        isDone={false} \n                        onChange={onChangeTodolistTitelHandler}/>\n                </Typography>\n                <IconButton onClick={deleteTaskHandler}>\n                    <DeleteIcon  fontSize=\"small\" />\n                </IconButton>\n            </div>\n            <AddNewTask addItem={addTask}/>\n            <ul>\n                {\n                    tasksForToDoList.map((task:TaskType)=>{\n                        const removeTaskHandler = () => {\n                            dispatch(removeTaskAC(id,task.id))\n                        }\n                        const changeCheckedHandler = (e:any) =>{\n                            dispatch(changeCheckedTaskAC(id,task.id, e.target.checked))\n                        }\n                        const onChangeTaskTitleHandler=(newValue:string)=>{\n                            dispatch(changeTaskTitleAC(id,task.id,newValue))\n                        }\n                        return (\n                            <Box key={task.id}>\n                                <Checkbox\n                                color=\"success\"\n                                checked={task.isDone}\n                                onClick={(e)=>changeCheckedHandler(e)}\n                                />\n                                <EditableSpan title={task.title} \n                                isDone={task.isDone} \n                                onChange={onChangeTaskTitleHandler}/>\n                                <IconButton onClick={removeTaskHandler}>\n                                    <DeleteIcon  fontSize=\"small\" />\n                                </IconButton>\n                            </Box>\n                        )\n                    })\n                }\n            </ul>\n            <div>\n                <Button onClick={changeFilterAllHandler} \n                    variant={filter==='all' ? 'contained' : 'text'}>\n                    All\n                </Button>\n                <Button onClick={changeFilterActiveHandler}\n                    color='success'\n                    variant={filter==='active' ? 'contained' : 'text'}>\n                    Active\n                </Button>\n                <Button onClick={changeFilterCompletedHandler}\n                    color=\"secondary\"\n                    variant={filter==='completed' ? 'contained' : 'text'}>\n                    Completed\n                </Button>\n            </div>\n        </div>\n    )\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}