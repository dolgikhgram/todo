{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/Projects/React:Typescript-project/Todolist/todolist-project/src/components/Todolist/Todolist/Todolist.tsx\";\nimport React from 'react';\nimport './Todolist.css';\nimport AddNewTask from '../../AddNewTask/AddNewTask';\nimport EditableSpan from '../../EditableSpan/EditableSpan';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Todolist = ({\n  title,\n  tasks,\n  removeTask,\n  changeFilter,\n  addNewTask,\n  changeChecked,\n  filter,\n  id,\n  deleteTask,\n  changeTaskTitle\n}) => {\n  const changeFilterAllHandler = () => {\n    changeFilter('all', id);\n  };\n  const changeFilterActiveHandler = () => {\n    changeFilter('active', id);\n  };\n  const changeFilterCompletedHandler = () => {\n    changeFilter('completed', id);\n  };\n  const deleteTaskHandler = () => {\n    deleteTask(id);\n  };\n  const addTask = title => {\n    addNewTask(title, id);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"name-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-delete-task\",\n        onClick: deleteTaskHandler,\n        children: \"x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AddNewTask, {\n      addItem: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => {\n        const removeTaskHandler = () => {\n          removeTask(task.id, id);\n        };\n        const changeCheckedHandler = () => {\n          changeChecked(task.id, id);\n        };\n        const onChangeTaskTitleHandler = newValue => {\n          changeTaskTitle(task.id, id, newValue);\n        };\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: task.isDone ? 'is-done' : '',\n            checked: task.isDone,\n            onClick: changeCheckedHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(EditableSpan, {\n            title: task.title,\n            isDone: task.isDone,\n            todolistId: id,\n            taskId: task.id,\n            onChange: onChangeTaskTitleHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: removeTaskHandler,\n            children: \"x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 33\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: changeFilterAllHandler,\n        className: filter === 'all' ? 'active-btn' : '',\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: changeFilterActiveHandler,\n        className: filter === 'active' ? 'active-btn' : '',\n        children: \"Active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: changeFilterCompletedHandler,\n        className: filter === 'completed' ? 'active-btn' : '',\n        children: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_c = Todolist;\nvar _c;\n$RefreshReg$(_c, \"Todolist\");","map":{"version":3,"names":["React","AddNewTask","EditableSpan","jsxDEV","_jsxDEV","Todolist","title","tasks","removeTask","changeFilter","addNewTask","changeChecked","filter","id","deleteTask","changeTaskTitle","changeFilterAllHandler","changeFilterActiveHandler","changeFilterCompletedHandler","deleteTaskHandler","addTask","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","addItem","map","task","removeTaskHandler","changeCheckedHandler","onChangeTaskTitleHandler","newValue","type","isDone","checked","todolistId","taskId","onChange","_c","$RefreshReg$"],"sources":["/Users/user/Documents/Projects/React:Typescript-project/Todolist/todolist-project/src/components/Todolist/Todolist/Todolist.tsx"],"sourcesContent":["import React from 'react';\nimport { FilterValuesType } from \"../../../App\"\nimport './Todolist.css'\nimport AddNewTask from '../../AddNewTask/AddNewTask';\nimport EditableSpan from '../../EditableSpan/EditableSpan';\nexport type TaskType = {\n    id:string\n    title:string\n    isDone:boolean\n}\ntype PropsType = {\n    title:string\n    tasks:Array<TaskType>\n    removeTask: (id:string, todolistId:string)=> void\n    changeFilter: (filter:FilterValuesType, todolistId:string)=> void\n    addNewTask:(value:string,id:string)=>void\n    changeChecked:(id:string,todolistId:string)=>void\n    filter:FilterValuesType\n    id:string\n    deleteTask:(id:string)=>void\n    changeTaskTitle:(taskId:string,todolistId:string, newValue:string)=>void\n}\n\nexport const Todolist = ({title,tasks,removeTask,changeFilter,addNewTask,changeChecked,filter, id,deleteTask,changeTaskTitle}:PropsType)=>{\n    \n    const changeFilterAllHandler = () => {\n        changeFilter('all',id)\n    }\n    const changeFilterActiveHandler = () => {\n        changeFilter('active',id)\n    }\n    \n    const changeFilterCompletedHandler = () => {\n        changeFilter('completed',id)\n    }\n\n    const deleteTaskHandler = () =>{\n        deleteTask(id)\n    }\n\n    const addTask = (title:string)=>{\n        addNewTask(title, id)\n    }\n\n    return (\n        <div>\n            <div className='name-container'>\n                <h3>{title}</h3>\n                <button\n                    className='btn-delete-task'\n                    onClick={deleteTaskHandler}>x</button>\n            </div>\n            <AddNewTask addItem={addTask}/>\n            <ul>\n                {\n                    tasks.map((task)=>{\n\n                        const removeTaskHandler = () => {\n                            removeTask(task.id,id)\n                        }\n                        const changeCheckedHandler = () =>{\n                            changeChecked(task.id, id)\n                        }\n                        const onChangeTaskTitleHandler=(newValue:string)=>{\n                            changeTaskTitle(task.id,id,newValue)\n                        }\n\n                        return (\n                            <li key={task.id}>\n                                <input type='checkbox'\n                                className={task.isDone ? 'is-done' : ''}\n                                checked={task.isDone}\n                                onClick={changeCheckedHandler}\n                                />\n                                <EditableSpan title={task.title} \n                                isDone={task.isDone} \n                                todolistId={id} \n                                taskId = {task.id}\n                                onChange={onChangeTaskTitleHandler}/>\n                                <button onClick={removeTaskHandler}>x</button>\n                            </li>\n                        )\n                    })\n                }\n            </ul>\n            <div>\n                <button onClick={changeFilterAllHandler} \n                    className={filter==='all' ? 'active-btn' : ''}>\n                    All\n                </button>\n                <button onClick={changeFilterActiveHandler}\n                    className={filter==='active' ? 'active-btn' : ''}>\n                    Active\n                </button>\n                <button onClick={changeFilterCompletedHandler}\n                    className={filter==='completed' ? 'active-btn' : ''}>\n                    Completed\n                </button>\n            </div>\n        </div>\n    )\n}\n\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}