{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/Projects/React:Typescript-project/Todolist/todolist-project/src/components/Todolist/Todolist/Todolist.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Todolist = ({\n  title,\n  tasks,\n  removeTask,\n  changeFilter,\n  addNewTask\n}) => {\n  _s();\n  let [newTask, setNewTask] = useState(\"\");\n  const CreateNewTask = value => {\n    setNewTask(value);\n  };\n  const onNewTitleChangeHandler = e => {\n    CreateNewTask(e.target.value);\n  };\n  const onEnterKeyPressHandler = e => {\n    if (e.charCode === 13) {\n      addNewTask(newTask);\n      setNewTask('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: onNewTitleChangeHandler,\n        onKeyPress: onEnterKeyPressHandler,\n        value: newTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          addNewTask(newTask);\n          setNewTask('');\n        },\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: task.isDone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              removeTask(task.id);\n            },\n            children: \"x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 33\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          changeFilter('all');\n        },\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          changeFilter('active');\n        },\n        children: \"Active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          changeFilter('completed');\n        },\n        children: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(Todolist, \"YZsysmu1r19T0xo6FDXx+0zbs3A=\");\n_c = Todolist;\nvar _c;\n$RefreshReg$(_c, \"Todolist\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Todolist","title","tasks","removeTask","changeFilter","addNewTask","_s","newTask","setNewTask","CreateNewTask","value","onNewTitleChangeHandler","e","target","onEnterKeyPressHandler","charCode","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onKeyPress","onClick","map","task","type","checked","isDone","id","_c","$RefreshReg$"],"sources":["/Users/user/Documents/Projects/React:Typescript-project/Todolist/todolist-project/src/components/Todolist/Todolist/Todolist.tsx"],"sourcesContent":["import React, { KeyboardEvent,ChangeEvent, useState } from 'react';\nimport { FilterValuesType } from \"../../../App\"\nexport type TaskType = {\n    id:string\n    title:string\n    isDone:boolean\n}\ntype PropsType = {\n    title:string\n    tasks:Array<TaskType>\n    removeTask: (id:string)=> void\n    changeFilter: (filter:FilterValuesType)=> void\n    addNewTask:(value:string)=>void\n}\n\nexport const Todolist = ({title,tasks,removeTask,changeFilter,addNewTask}:PropsType)=>{\n    let [newTask,setNewTask] = useState(\"\")\n    const CreateNewTask = (value:string)=>{\n        setNewTask(value)\n    }\n    const onNewTitleChangeHandler = (e:ChangeEvent<HTMLInputElement>)=>{\n        CreateNewTask(e.target.value)\n    }\n    const onEnterKeyPressHandler = (e:KeyboardEvent<HTMLInputElement>)=>{\n                    if (e.charCode ===13){\n                        addNewTask(newTask)\n                        setNewTask('')\n                    }\n                }\n    return (\n        <div>\n            <h3>\n                {title}\n            </h3>\n            <div>\n                <input \n                onChange={onNewTitleChangeHandler} \n                onKeyPress={onEnterKeyPressHandler}\n                value={newTask}/>\n                <button onClick={()=>{\n                    addNewTask(newTask)\n                    setNewTask('')}}\n                    >+</button>\n            </div>\n            <ul>\n                {\n                    tasks.map((task)=>{\n                        return (\n                            <li key={task.id}>\n                                <input type='checkbox' checked={task.isDone}/>\n                                <span>{task.title}</span>\n                                <button onClick={()=>{removeTask(task.id)}}>x</button>\n                            </li>\n                        )\n                    })\n                }\n            </ul>\n            <div>\n                <button onClick={()=>{changeFilter('all')}}>All</button>\n                <button onClick={()=>{changeFilter('active')}}>Active</button>\n                <button onClick={()=>{changeFilter('completed')}}>Completed</button>\n            </div>\n        </div>\n    )\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}