{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/Projects/React:Typescript-project/Todolist/todolist-project/src/components/EditableSpan/EditableSpan.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './EditableSpan.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EditableSpan = ({\n  title,\n  isDone\n}) => {\n  _s();\n  const [editMode, setEditMode] = useState(true);\n  const activateEditMode = () => {\n    setEditMode(false);\n  };\n  const activateViewMode = () => {\n    setEditMode(true);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: editMode ? /*#__PURE__*/_jsxDEV(\"span\", {\n      onDoubleClick: activateEditMode,\n      className: isDone ? 'is-done' : '',\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n      value: title,\n      onBlur: activateViewMode // событие onBlur возникает при потере элемента из фокуса\n      ,\n      autoFocus: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 15\n    }, this) // ставит автоматичиски фокус на инпут\n  }, void 0, false);\n};\n_s(EditableSpan, \"7M2B2MniFeKBS+Uf1pfAkQNmZfw=\");\n_c = EditableSpan;\nexport default EditableSpan;\nvar _c;\n$RefreshReg$(_c, \"EditableSpan\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","EditableSpan","title","isDone","_s","editMode","setEditMode","activateEditMode","activateViewMode","children","onDoubleClick","className","fileName","_jsxFileName","lineNumber","columnNumber","value","onBlur","autoFocus","_c","$RefreshReg$"],"sources":["/Users/user/Documents/Projects/React:Typescript-project/Todolist/todolist-project/src/components/EditableSpan/EditableSpan.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport './EditableSpan.css'\n\ntype EditableSpanPropsType = {\n    title:string\n    isDone:boolean\n}\n\nconst EditableSpan = ({title, isDone}:EditableSpanPropsType) =>{\n    const [editMode, setEditMode] = useState(true)\n    const activateEditMode = ()  =>{\n        setEditMode(false)\n    }\n    const activateViewMode = ()  =>{\n        setEditMode(true)\n    }\n    return (\n        <>\n        {\n            editMode ? \n            <span \n            onDoubleClick={activateEditMode}\n            className={isDone ? 'is-done' : ''}>\n                {title}\n            </span>  \n            : <input value={title} \n            onBlur={activateViewMode}// событие onBlur возникает при потере элемента из фокуса\n            autoFocus/> // ставит автоматичиски фокус на инпут\n        }\n        </>\n    )\n}\n\nexport default EditableSpan\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,oBAAoB;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAO3B,MAAMC,YAAY,GAAGA,CAAC;EAACC,KAAK;EAAEC;AAA4B,CAAC,KAAI;EAAAC,EAAA;EAC3D,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAMW,gBAAgB,GAAGA,CAAA,KAAM;IAC3BD,WAAW,CAAC,KAAK,CAAC;EACtB,CAAC;EACD,MAAME,gBAAgB,GAAGA,CAAA,KAAM;IAC3BF,WAAW,CAAC,IAAI,CAAC;EACrB,CAAC;EACD,oBACIR,OAAA,CAAAE,SAAA;IAAAS,QAAA,EAEIJ,QAAQ,gBACRP,OAAA;MACAY,aAAa,EAAEH,gBAAiB;MAChCI,SAAS,EAAER,MAAM,GAAG,SAAS,GAAG,EAAG;MAAAM,QAAA,EAC9BP;IAAK;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,gBACLjB,OAAA;MAAOkB,KAAK,EAAEd,KAAM;MACtBe,MAAM,EAAET,gBAAiB;MAAA;MACzBU,SAAS;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,CAAC;EAAA,gBAEd,CAAC;AAEX,CAAC;AAAAX,EAAA,CAvBKH,YAAY;AAAAkB,EAAA,GAAZlB,YAAY;AAyBlB,eAAeA,YAAY;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}