{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/Projects/React:Typescript-project/Todolist/todolist-project/src/components/EditableSpan/EditableSpan.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './EditableSpan.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EditableSpan = ({\n  title,\n  isDone\n}) => {\n  _s();\n  const [editMode, setEditMode] = useState(true);\n  let [newValue, setnewValue] = useState(title);\n  const activateEditMode = () => {\n    setEditMode(false);\n  };\n  const activateViewMode = () => {\n    setEditMode(true);\n  };\n  const changeValueHandler = e => {\n    setnewValue(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: editMode ? /*#__PURE__*/_jsxDEV(\"span\", {\n      onDoubleClick: activateEditMode,\n      className: isDone ? 'is-done' : '',\n      children: newValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n      value: title,\n      onChange: changeValueHandler,\n      onBlur: activateViewMode // событие onBlur возникает при потере элемента из фокуса\n      ,\n      autoFocus: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 15\n    }, this) // ставит автоматичиски фокус на инпут\n  }, void 0, false);\n};\n_s(EditableSpan, \"0Jt9S1Ecf7tyOVKbSgret+qKllE=\");\n_c = EditableSpan;\nexport default EditableSpan;\nvar _c;\n$RefreshReg$(_c, \"EditableSpan\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","EditableSpan","title","isDone","_s","editMode","setEditMode","newValue","setnewValue","activateEditMode","activateViewMode","changeValueHandler","e","target","value","children","onDoubleClick","className","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onBlur","autoFocus","_c","$RefreshReg$"],"sources":["/Users/user/Documents/Projects/React:Typescript-project/Todolist/todolist-project/src/components/EditableSpan/EditableSpan.tsx"],"sourcesContent":["import React, { ChangeEventHandler, useState } from \"react\";\nimport './EditableSpan.css'\n\ntype EditableSpanPropsType = {\n    title:string\n    isDone:boolean\n}\n\nconst EditableSpan = ({title, isDone}:EditableSpanPropsType) =>{\n    const [editMode, setEditMode] = useState(true)\n    let [newValue, setnewValue] = useState(title)\n    const activateEditMode = ()  =>{\n        setEditMode(false)\n    }\n    const activateViewMode = ()  =>{\n        setEditMode(true)\n    }\n    const changeValueHandler = (e:ChangeEventHandler<HTMLInputElement>) =>{\n        setnewValue(e.target.value)\n    }\n\n    return (\n        <>\n        {\n            editMode ? \n            <span \n            onDoubleClick={activateEditMode}\n            className={isDone ? 'is-done' : ''}>\n                {newValue}\n            </span>  \n            : <input value={title} \n            onChange={changeValueHandler}\n            onBlur={activateViewMode}// событие onBlur возникает при потере элемента из фокуса\n            autoFocus/> // ставит автоматичиски фокус на инпут\n        }\n        </>\n    )\n}\n\nexport default EditableSpan\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAwBC,QAAQ,QAAQ,OAAO;AAC3D,OAAO,oBAAoB;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAO3B,MAAMC,YAAY,GAAGA,CAAC;EAACC,KAAK;EAAEC;AAA4B,CAAC,KAAI;EAAAC,EAAA;EAC3D,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC9C,IAAI,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAACM,KAAK,CAAC;EAC7C,MAAMO,gBAAgB,GAAGA,CAAA,KAAM;IAC3BH,WAAW,CAAC,KAAK,CAAC;EACtB,CAAC;EACD,MAAMI,gBAAgB,GAAGA,CAAA,KAAM;IAC3BJ,WAAW,CAAC,IAAI,CAAC;EACrB,CAAC;EACD,MAAMK,kBAAkB,GAAIC,CAAsC,IAAI;IAClEJ,WAAW,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;EAED,oBACIhB,OAAA,CAAAE,SAAA;IAAAe,QAAA,EAEIV,QAAQ,gBACRP,OAAA;MACAkB,aAAa,EAAEP,gBAAiB;MAChCQ,SAAS,EAAEd,MAAM,GAAG,SAAS,GAAG,EAAG;MAAAY,QAAA,EAC9BR;IAAQ;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC,gBACLvB,OAAA;MAAOgB,KAAK,EAAEZ,KAAM;MACtBoB,QAAQ,EAAEX,kBAAmB;MAC7BY,MAAM,EAAEb,gBAAiB;MAAA;MACzBc,SAAS;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,CAAC;EAAA,gBAEd,CAAC;AAEX,CAAC;AAAAjB,EAAA,CA7BKH,YAAY;AAAAwB,EAAA,GAAZxB,YAAY;AA+BlB,eAAeA,YAAY;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}