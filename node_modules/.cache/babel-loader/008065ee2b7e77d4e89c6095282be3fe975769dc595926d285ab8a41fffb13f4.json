{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/Projects/React:Typescript-project/Todolist/todolist-project/src/components/Todolist/Todolist/Todolist.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './Todolist.css';\nimport AddNewTask from '../../AddNewTask/AddNewTask';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditableSpan from '../../EditableSpan/EditableSpan';\nimport { Button, Checkbox, IconButton, Typography, Box } from '@mui/material';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { addTaskAC, changeCheckedTaskAC, changeTaskTitleAC, removeTaskAC } from '../../../state/tasks-reducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Todolist = ({\n  title,\n  changeFilter,\n  filter,\n  id,\n  removeTodolist,\n  changeTodolistTitle\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const tasks = useSelector(state => state.tasks);\n  const changeTaskTitle = (taskId, todolistId, newValue) => {\n    dispatch(changeTaskTitleAC(todolistId, taskId, newValue));\n  };\n  const changeChecked = (id, todolistId, isDone) => {\n    dispatch(changeCheckedTaskAC(todolistId, id, isDone));\n  };\n  const removeTask = (id, todolistId) => {\n    dispatch(removeTaskAC(todolistId, id));\n  };\n  const changeFilterAllHandler = () => {\n    changeFilter('all', id);\n  };\n  const changeFilterActiveHandler = () => {\n    changeFilter('active', id);\n  };\n  const changeFilterCompletedHandler = () => {\n    changeFilter('completed', id);\n  };\n  const deleteTaskHandler = () => {\n    removeTodolist(id);\n  };\n  const addTask = title => {\n    dispatch(addTaskAC(id, title));\n  };\n  const onChangeTodolistTitelHandler = newValue => {\n    changeTodolistTitle(id, newValue);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"name-container\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: /*#__PURE__*/_jsxDEV(EditableSpan, {\n          title: title,\n          isDone: false,\n          onChange: onChangeTodolistTitelHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: deleteTaskHandler,\n        children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n          fontSize: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AddNewTask, {\n      addItem: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks[id].map(task => {\n        const removeTaskHandler = () => {\n          removeTask(task.id, id);\n        };\n        const changeCheckedHandler = e => {\n          changeChecked(task.id, id, e.target.checked);\n        };\n        const onChangeTaskTitleHandler = newValue => {\n          changeTaskTitle(task.id, id, newValue);\n        };\n        return /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n            color: \"success\",\n            checked: task.isDone,\n            onClick: e => changeCheckedHandler(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(EditableSpan, {\n            title: task.title,\n            isDone: task.isDone,\n            onChange: onChangeTaskTitleHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: removeTaskHandler,\n            children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n              fontSize: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 33\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: changeFilterAllHandler,\n        variant: filter === 'all' ? 'contained' : 'text',\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: changeFilterActiveHandler,\n        color: \"success\",\n        variant: filter === 'active' ? 'contained' : 'text',\n        children: \"Active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: changeFilterCompletedHandler,\n        color: \"secondary\",\n        variant: filter === 'completed' ? 'contained' : 'text',\n        children: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n_s(Todolist, \"YE/xPoX5SCvnKrlJfmGrx5iYpok=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Todolist;\nvar _c;\n$RefreshReg$(_c, \"Todolist\");","map":{"version":3,"names":["React","AddNewTask","DeleteIcon","EditableSpan","Button","Checkbox","IconButton","Typography","Box","useSelector","useDispatch","addTaskAC","changeCheckedTaskAC","changeTaskTitleAC","removeTaskAC","jsxDEV","_jsxDEV","Todolist","title","changeFilter","filter","id","removeTodolist","changeTodolistTitle","_s","dispatch","tasks","state","changeTaskTitle","taskId","todolistId","newValue","changeChecked","isDone","removeTask","changeFilterAllHandler","changeFilterActiveHandler","changeFilterCompletedHandler","deleteTaskHandler","addTask","onChangeTodolistTitelHandler","children","className","variant","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","fontSize","addItem","map","task","removeTaskHandler","changeCheckedHandler","e","target","checked","onChangeTaskTitleHandler","color","_c","$RefreshReg$"],"sources":["/Users/user/Documents/Projects/React:Typescript-project/Todolist/todolist-project/src/components/Todolist/Todolist/Todolist.tsx"],"sourcesContent":["import React from 'react';\nimport { FilterValuesType, TaskStateType } from \"../../../App\"\nimport './Todolist.css'\nimport AddNewTask from '../../AddNewTask/AddNewTask';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditableSpan from '../../EditableSpan/EditableSpan';\nimport { Button, Checkbox, IconButton, Typography,Box} from '@mui/material';\nimport { useSelector } from 'react-redux';\nimport { AppRootState } from '../../../state/store';\nimport { useDispatch } from 'react-redux';\nimport { addTaskAC, changeCheckedTaskAC, changeTaskTitleAC, removeTaskAC } from '../../../state/tasks-reducer';\nexport type TaskType = {\n    id:string\n    title:string\n    isDone:boolean\n}\ntype PropsType = {\n    title:string\n    changeFilter: (filter:FilterValuesType, todolistId:string)=> void\n    filter:FilterValuesType\n    id:string\n    removeTodolist:(id:string)=>void\n    changeTodolistTitle:(todolistId:string, newValue:string)=>void\n}\nexport const Todolist = ({title, changeFilter,  filter, id, removeTodolist, changeTodolistTitle}:PropsType)=>{\n    const dispatch = useDispatch()\n    const tasks: TaskStateType = useSelector<AppRootState, TaskStateType>(state=>state.tasks)\n    const changeTaskTitle = (taskId:string,todolistId:string, newValue:string) =>{\n        dispatch(changeTaskTitleAC(todolistId,taskId,newValue))\n    }\n    const changeChecked= (id:string, todolistId:string, isDone:boolean) =>{\n        dispatch(changeCheckedTaskAC(todolistId,id, isDone))\n    }\n    const removeTask = (id:string,todolistId:string)=>{\n        dispatch(removeTaskAC(todolistId,id))\n    }\n\n\n\n    const changeFilterAllHandler = () => {\n        changeFilter('all',id)\n    }\n    const changeFilterActiveHandler = () => {\n        changeFilter('active',id)\n    }\n    \n    const changeFilterCompletedHandler = () => {\n        changeFilter('completed',id)\n    }\n    const deleteTaskHandler = () =>{\n        removeTodolist(id)\n    }\n    const addTask = (title:string)=>{\n        dispatch(addTaskAC(id,title))\n    }\n    const onChangeTodolistTitelHandler = (newValue:string)=>{\n        changeTodolistTitle(id,newValue)\n    }\n    return (\n        <div>\n            <div className='name-container'>\n                <Typography variant=\"h6\">\n                    <EditableSpan \n                        title={title} \n                        isDone={false} \n                        onChange={onChangeTodolistTitelHandler}/>\n                </Typography>\n                <IconButton onClick={deleteTaskHandler}>\n                    <DeleteIcon  fontSize=\"small\" />\n                </IconButton>\n            </div>\n            <AddNewTask addItem={addTask}/>\n            <ul>\n                {\n                    tasks[id].map((task:TaskType)=>{\n                        const removeTaskHandler = () => {\n                            removeTask(task.id,id)\n                        }\n                        const changeCheckedHandler = (e:any) =>{\n                            changeChecked(task.id, id, e.target.checked)\n                        }\n                        const onChangeTaskTitleHandler=(newValue:string)=>{\n                            changeTaskTitle(task.id,id,newValue)\n                        }\n                        return (\n                            <Box key={task.id}>\n                                <Checkbox\n                                color=\"success\"\n                                checked={task.isDone}\n                                onClick={(e)=>changeCheckedHandler(e)}\n                                />\n                                <EditableSpan title={task.title} \n                                isDone={task.isDone} \n                                onChange={onChangeTaskTitleHandler}/>\n                                <IconButton onClick={removeTaskHandler}>\n                                    <DeleteIcon  fontSize=\"small\" />\n                                </IconButton>\n                            </Box>\n                        )\n                    })\n                }\n            </ul>\n            <div>\n                <Button onClick={changeFilterAllHandler} \n                    variant={filter==='all' ? 'contained' : 'text'}>\n                    All\n                </Button>\n                <Button onClick={changeFilterActiveHandler}\n                    color='success'\n                    variant={filter==='active' ? 'contained' : 'text'}>\n                    Active\n                </Button>\n                <Button onClick={changeFilterCompletedHandler}\n                    color=\"secondary\"\n                    variant={filter==='completed' ? 'contained' : 'text'}>\n                    Completed\n                </Button>\n            </div>\n        </div>\n    )\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}