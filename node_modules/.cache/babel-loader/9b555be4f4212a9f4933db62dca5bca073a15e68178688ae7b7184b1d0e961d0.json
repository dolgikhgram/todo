{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/Projects/React:Typescript-project/Todolist/todolist-project/src/components/AddItemForm/AddItemForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './AddItemForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddItemForm = ({\n  addNewTask\n}) => {\n  _s();\n  const [newValue, setNewValue] = useState('');\n  const [error, setError] = useState(false);\n  const addNewTaskHandler = () => {\n    if (newValue.trim().length !== 0) {} else setError(true);\n    setNewValue('');\n  };\n  const onNewItemChangeHandler = e => {\n    setNewValue(e.target.value);\n  };\n  const onEnterKeyPressHandler = e => {\n    if (e.charCode === 13) {\n      addNewTaskHandler();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list-add\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: newValue,\n      onChange: onNewItemChangeHandler,\n      onKeyPress: onEnterKeyPressHandler,\n      className: error ? 'error' : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addNewTaskHandler,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: \"Field is required\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(AddItemForm, \"hUFnREpfqdGY5Jya8mUzRL56DG4=\");\n_c = AddItemForm;\nexport default AddItemForm;\nvar _c;\n$RefreshReg$(_c, \"AddItemForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AddItemForm","addNewTask","_s","newValue","setNewValue","error","setError","addNewTaskHandler","trim","length","onNewItemChangeHandler","e","target","value","onEnterKeyPressHandler","charCode","className","children","onChange","onKeyPress","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/user/Documents/Projects/React:Typescript-project/Todolist/todolist-project/src/components/AddItemForm/AddItemForm.tsx"],"sourcesContent":["import React, { ChangeEvent, useState, KeyboardEvent } from \"react\";\nimport './AddItemForm.css'\n\ntype AddItemFormPropsType={\n    addNewTask:(value:string,id:string)=>void\n}\n\nconst AddItemForm = ({addNewTask}:AddItemFormPropsType)=>{\n    const [newValue, setNewValue]=useState('')\n    const [error, setError]=useState(false)\n    const addNewTaskHandler  = ()=>{\n        if (newValue.trim().length!==0){\n\n        }else setError(true)\n        setNewValue('')\n    }\n    const onNewItemChangeHandler =(e:ChangeEvent<HTMLInputElement>)=>{\n        setNewValue(e.target.value)\n    }\n    const onEnterKeyPressHandler = (e:KeyboardEvent<HTMLInputElement>)=>{\n        if (e.charCode ===13){\n            addNewTaskHandler()\n        }\n    }\n    \n    return (\n        <div className='list-add'>\n            <input \n                value={newValue}\n                onChange={onNewItemChangeHandler}\n                onKeyPress={onEnterKeyPressHandler}\n                className={ error ? 'error' : ''}\n                />\n            <button onClick={addNewTaskHandler}>\n                +\n            </button>\n                {\n                    error&&<div className='error-message'>Field is required</div>\n                }\n        </div>\n    )\n}\n\nexport default AddItemForm"],"mappings":";;AAAA,OAAOA,KAAK,IAAiBC,QAAQ,QAAuB,OAAO;AACnE,OAAO,mBAAmB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAM1B,MAAMC,WAAW,GAAGA,CAAC;EAACC;AAA+B,CAAC,KAAG;EAAAC,EAAA;EACrD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAACP,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAACT,QAAQ,CAAC,KAAK,CAAC;EACvC,MAAMU,iBAAiB,GAAIA,CAAA,KAAI;IAC3B,IAAIJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CAACC,MAAM,KAAG,CAAC,EAAC,CAE/B,CAAC,MAAKH,QAAQ,CAAC,IAAI,CAAC;IACpBF,WAAW,CAAC,EAAE,CAAC;EACnB,CAAC;EACD,MAAMM,sBAAsB,GAAGC,CAA+B,IAAG;IAC7DP,WAAW,CAACO,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;EACD,MAAMC,sBAAsB,GAAIH,CAAiC,IAAG;IAChE,IAAIA,CAAC,CAACI,QAAQ,KAAI,EAAE,EAAC;MACjBR,iBAAiB,CAAC,CAAC;IACvB;EACJ,CAAC;EAED,oBACIR,OAAA;IAAKiB,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACrBlB,OAAA;MACIc,KAAK,EAAEV,QAAS;MAChBe,QAAQ,EAAER,sBAAuB;MACjCS,UAAU,EAAEL,sBAAuB;MACnCE,SAAS,EAAGX,KAAK,GAAG,OAAO,GAAG;IAAG;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,eACNxB,OAAA;MAAQyB,OAAO,EAAEjB,iBAAkB;MAAAU,QAAA,EAAC;IAEpC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAEDlB,KAAK,iBAAEN,OAAA;MAAKiB,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAC;IAAiB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEpE,CAAC;AAEd,CAAC;AAAArB,EAAA,CAlCKF,WAAW;AAAAyB,EAAA,GAAXzB,WAAW;AAoCjB,eAAeA,WAAW;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}