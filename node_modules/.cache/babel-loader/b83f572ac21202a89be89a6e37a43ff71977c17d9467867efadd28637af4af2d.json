{"ast":null,"code":"import{v1}from\"uuid\";export let todolistId1=v1();export let todolistId2=v1();const initialState=[{id:todolistId1,title:\"what needs to be done?\",filter:\"all\"}];export const todolistsReducer=function(){let state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;let action=arguments.length>1?arguments[1]:undefined;switch(action.type){case'REMOVE-TODOLIST':return[...state.filter(t=>{return t.id!==action.id;})];case'ADD-TOODOLIST':return[{id:action.todolistId,title:action.title,filter:'all'},...state];case'CHANGE-TODOLIST-TITLE':if(action.title.trim().length!==0){state.map(el=>{if(el.id===action.id){el.title=action.title;}});}return[...state];case'CHANGE-NEW-FILTER':state.map(e=>{if(e.id===action.id){e.filter=action.filter;}});return[...state];default:return state;}};export const removeTodolistAC=todolistId=>{return{type:'REMOVE-TODOLIST',id:todolistId};};export const addTodolistAC=title=>{return{type:'ADD-TOODOLIST',title:title,todolistId:v1()};};export const changeTodolistTitleAC=(todolistId,title)=>{return{type:'CHANGE-TODOLIST-TITLE',id:todolistId,title:title};};export const changeNewFilterAC=(todolistId,filter)=>{return{type:'CHANGE-NEW-FILTER',id:todolistId,filter:filter};};","map":{"version":3,"names":["v1","todolistId1","todolistId2","initialState","id","title","filter","todolistsReducer","state","arguments","length","undefined","action","type","t","todolistId","trim","map","el","e","removeTodolistAC","addTodolistAC","changeTodolistTitleAC","changeNewFilterAC"],"sources":["/Users/user/Documents/Projects/React:Typescript-project/Todolist/todolist-project/src/state/todolists-reducer.ts"],"sourcesContent":["import { v1 } from \"uuid\"\nimport { FilterValuesType, TodolistType } from \"../AppWithRedux\"\nexport type  RemoveTodolistActionType={\n    type: 'REMOVE-TODOLIST'\n    id:string\n}\n\nexport type AddTodolistActionType = {\n    type: 'ADD-TOODOLIST'\n    title:string\n    todolistId:string\n}\n\nexport type ChangeTodolistTitleActionType = {\n    type: 'CHANGE-TODOLIST-TITLE'\n    id:string\n    title:string\n}\n\nexport type ChangeNewFilterActionType = {\n    type: 'CHANGE-NEW-FILTER'\n    id:string\n    filter:FilterValuesType\n}\n\nexport type ActionsTypes  = RemoveTodolistActionType | ChangeTodolistTitleActionType | ChangeNewFilterActionType | AddTodolistActionType\nexport let todolistId1 = v1()\nexport let todolistId2 = v1()\nconst initialState: Array <TodolistType> = [\n    {id: todolistId1 , title:\"what needs to be done?\", filter: \"all\"}\n]\nexport const todolistsReducer = (state: Array <TodolistType> =  initialState, action: ActionsTypes): Array <TodolistType>  => {\n    switch(action.type){\n        case 'REMOVE-TODOLIST' :\n            return [...state.filter((t) => {return (t.id!==action.id)})]\n        case 'ADD-TOODOLIST' :\n            return [{ \n                id:action.todolistId,\n                title: action.title,\n                filter:'all'\n            },...state]\n        case 'CHANGE-TODOLIST-TITLE' :\n            if(action.title.trim().length!==0){\n                state.map((el)=>{\n                if (el.id===action.id){\n                    el.title=action.title\n                }\n                })\n            }\n            return [...state]\n        case 'CHANGE-NEW-FILTER' :\n            state.map((e) => {\n                if (e.id ===action.id){\n                    e.filter = action.filter\n                }\n            })\n            return [...state]\n        default:\n            return state\n    }\n}\n\nexport const removeTodolistAC  = (todolistId:string):RemoveTodolistActionType =>{\n    return { type:'REMOVE-TODOLIST', id: todolistId}\n}\n\nexport const addTodolistAC = (title:string):AddTodolistActionType =>{\n    return {type: 'ADD-TOODOLIST', title:title, todolistId:v1()}\n}\n\nexport const changeTodolistTitleAC = (todolistId:string, title:string):ChangeTodolistTitleActionType =>{\n    return {type: 'CHANGE-TODOLIST-TITLE',id: todolistId , title:title}\n}\n\nexport const changeNewFilterAC = (todolistId:string,  filter:FilterValuesType):ChangeNewFilterActionType =>{\n    return {type: 'CHANGE-NEW-FILTER',id: todolistId , filter:filter}\n}"],"mappings":"AAAA,OAASA,EAAE,KAAQ,MAAM,CA0BzB,MAAO,IAAI,CAAAC,WAAW,CAAGD,EAAE,CAAC,CAAC,CAC7B,MAAO,IAAI,CAAAE,WAAW,CAAGF,EAAE,CAAC,CAAC,CAC7B,KAAM,CAAAG,YAAkC,CAAG,CACvC,CAACC,EAAE,CAAEH,WAAW,CAAGI,KAAK,CAAC,wBAAwB,CAAEC,MAAM,CAAE,KAAK,CAAC,CACpE,CACD,MAAO,MAAM,CAAAC,gBAAgB,CAAG,QAAAA,CAAA,CAA8F,IAA7F,CAAAC,KAA2B,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAIN,YAAY,IAAE,CAAAS,MAAoB,CAAAH,SAAA,CAAAC,MAAA,GAAAD,SAAA,IAAAE,SAAA,CAC9F,OAAOC,MAAM,CAACC,IAAI,EACd,IAAK,iBAAiB,CAClB,MAAO,CAAC,GAAGL,KAAK,CAACF,MAAM,CAAEQ,CAAC,EAAK,CAAC,MAAQ,CAAAA,CAAC,CAACV,EAAE,GAAGQ,MAAM,CAACR,EAAE,CAAC,CAAC,CAAC,CAAC,CAChE,IAAK,eAAe,CAChB,MAAO,CAAC,CACJA,EAAE,CAACQ,MAAM,CAACG,UAAU,CACpBV,KAAK,CAAEO,MAAM,CAACP,KAAK,CACnBC,MAAM,CAAC,KACX,CAAC,CAAC,GAAGE,KAAK,CAAC,CACf,IAAK,uBAAuB,CACxB,GAAGI,MAAM,CAACP,KAAK,CAACW,IAAI,CAAC,CAAC,CAACN,MAAM,GAAG,CAAC,CAAC,CAC9BF,KAAK,CAACS,GAAG,CAAEC,EAAE,EAAG,CAChB,GAAIA,EAAE,CAACd,EAAE,GAAGQ,MAAM,CAACR,EAAE,CAAC,CAClBc,EAAE,CAACb,KAAK,CAACO,MAAM,CAACP,KAAK,CACzB,CACA,CAAC,CAAC,CACN,CACA,MAAO,CAAC,GAAGG,KAAK,CAAC,CACrB,IAAK,mBAAmB,CACpBA,KAAK,CAACS,GAAG,CAAEE,CAAC,EAAK,CACb,GAAIA,CAAC,CAACf,EAAE,GAAIQ,MAAM,CAACR,EAAE,CAAC,CAClBe,CAAC,CAACb,MAAM,CAAGM,MAAM,CAACN,MAAM,CAC5B,CACJ,CAAC,CAAC,CACF,MAAO,CAAC,GAAGE,KAAK,CAAC,CACrB,QACI,MAAO,CAAAA,KAAK,CACpB,CACJ,CAAC,CAED,MAAO,MAAM,CAAAY,gBAAgB,CAAKL,UAAiB,EAA6B,CAC5E,MAAO,CAAEF,IAAI,CAAC,iBAAiB,CAAET,EAAE,CAAEW,UAAU,CAAC,CACpD,CAAC,CAED,MAAO,MAAM,CAAAM,aAAa,CAAIhB,KAAY,EAA0B,CAChE,MAAO,CAACQ,IAAI,CAAE,eAAe,CAAER,KAAK,CAACA,KAAK,CAAEU,UAAU,CAACf,EAAE,CAAC,CAAC,CAAC,CAChE,CAAC,CAED,MAAO,MAAM,CAAAsB,qBAAqB,CAAGA,CAACP,UAAiB,CAAEV,KAAY,GAAkC,CACnG,MAAO,CAACQ,IAAI,CAAE,uBAAuB,CAACT,EAAE,CAAEW,UAAU,CAAGV,KAAK,CAACA,KAAK,CAAC,CACvE,CAAC,CAED,MAAO,MAAM,CAAAkB,iBAAiB,CAAGA,CAACR,UAAiB,CAAGT,MAAuB,GAA8B,CACvG,MAAO,CAACO,IAAI,CAAE,mBAAmB,CAACT,EAAE,CAAEW,UAAU,CAAGT,MAAM,CAACA,MAAM,CAAC,CACrE,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}