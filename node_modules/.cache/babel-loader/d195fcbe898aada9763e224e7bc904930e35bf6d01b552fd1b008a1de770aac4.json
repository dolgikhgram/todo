{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/Projects/React:Typescript-project/Todolist/todolist-project/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { Todolist } from './components/Todolist/Todolist/Todolist';\nimport { v1 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  let todolistId1 = v1();\n  let todolistId2 = v1();\n  let [tasks, setTasks] = useState({\n    [todolistId1]: [{\n      id: v1(),\n      title: 'CSS',\n      isDone: true\n    }, {\n      id: v1(),\n      title: 'JS',\n      isDone: true\n    }, {\n      id: v1(),\n      title: 'React',\n      isDone: false\n    }, {\n      id: v1(),\n      title: 'Redux',\n      isDone: false\n    }],\n    [todolistId2]: [{\n      id: v1(),\n      title: 'Book',\n      isDone: false\n    }, {\n      id: v1(),\n      title: 'Milk',\n      isDone: true\n    }]\n  });\n  const [todolist, setTodolist] = useState([{\n    id: todolistId1,\n    title: \"what to learn\",\n    filter: \"active\"\n  }, {\n    id: todolistId2,\n    title: \"what to buy\",\n    filter: \"completed\"\n  }]);\n  const addNewTask = (value, id) => {\n    if (value.trim().length !== 0) {\n      let newTasks = {\n        ...tasks\n      };\n      newTasks[id].unshift({\n        id: v1(),\n        title: value.trim(),\n        isDone: false\n      });\n      setTasks(newTasks);\n    }\n  };\n  const changeChecked = id => {\n    let task = tasks.find(el => el.id === id);\n    if (task) task.isDone = !task.isDone;\n    let newTasks = [...tasks];\n    setTasks(newTasks);\n  };\n  let removeTask = id => {\n    setTasks(tasks = tasks.filter(t => {\n      return t.id !== id;\n    }));\n  };\n  let changeFilter = (filter, todolistId) => {\n    todolist.map(el => {\n      if (el.id === todolistId) {\n        el.filter = filter;\n        setTodolist([...todolist]);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: todolist.map(tl => {\n      let tasksForToDoList = tasks[tl.id];\n      if (tl.filter === \"completed\") {\n        tasksForToDoList = tasks[tl.id].filter(t => {\n          return t.isDone === true;\n        });\n      }\n      if (tl.filter === \"active\") {\n        tasksForToDoList = tasks[tl.id].filter(t => {\n          return t.isDone === false;\n        });\n      }\n      return /*#__PURE__*/_jsxDEV(Todolist, {\n        title: tl.title,\n        tasks: tasksForToDoList,\n        removeTask: removeTask,\n        changeFilter: changeFilter,\n        addNewTask: addNewTask,\n        changeChecked: changeChecked,\n        filter: tl.filter,\n        id: tl.id\n      }, tl.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"dKHFH1fsoJApvveEKGxQB1MXGJ8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Todolist","v1","jsxDEV","_jsxDEV","App","_s","todolistId1","todolistId2","tasks","setTasks","id","title","isDone","todolist","setTodolist","filter","addNewTask","value","trim","length","newTasks","unshift","changeChecked","task","find","el","removeTask","t","changeFilter","todolistId","map","className","children","tl","tasksForToDoList","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/user/Documents/Projects/React:Typescript-project/Todolist/todolist-project/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport { TaskType, Todolist } from './components/Todolist/Todolist/Todolist';\nimport { v1 } from 'uuid';\n\nexport type FilterValuesType =\"all\" | \"completed\" | \"active\"\nexport type TodolistType = {\n  id:string\n  title:string\n  filter:FilterValuesType\n}\n\nfunction App() {\n  let todolistId1 = v1()\n  let todolistId2 = v1()\n  let [tasks, setTasks]=useState({\n    [todolistId1]:[\n      {id:v1(), title:'CSS', isDone:true},\n      {id:v1(), title:'JS', isDone:true},\n      {id:v1(), title:'React', isDone:false},\n      {id:v1(), title:'Redux', isDone:false}\n    ],\n    [todolistId2]:[\n      {id:v1(), title:'Book', isDone:false},\n      {id:v1(), title:'Milk', isDone:true},\n    ]\n  })\n\n  const[todolist,setTodolist]= useState<Array <TodolistType>>([\n    {id: todolistId1 , title:\"what to learn\", filter: \"active\"},\n    {id: todolistId2, title:\"what to buy\", filter:\"completed\"}\n  ])  \n  const addNewTask= (value:string, id:string) =>{\n    if(value.trim().length!==0){\n      let newTasks = {...tasks}\n      newTasks[id].unshift({id:v1(), title: value.trim(), isDone:false})\n      setTasks(newTasks)\n    }\n  }\n\n  const changeChecked= (id:string) =>{\n    let task = tasks.find((el) => el.id===id)\n    if (task)  task.isDone=!task.isDone\n    let newTasks=[...tasks]\n    setTasks(newTasks)\n  }\n\n  \n  let removeTask = (id:string)=>{\n    setTasks(tasks=tasks.filter((t:TaskType) => {return (t.id!==id)}))\n  }\n\n  let changeFilter = (filter:FilterValuesType, todolistId:string)=>{\n    todolist.map((el)=>{\n      if (el.id===todolistId){\n        el.filter=filter\n        setTodolist([...todolist])\n      }\n    })\n  }\n  return (\n    <div className=\"App\">\n      {todolist.map((tl)=>{\n        let tasksForToDoList = tasks[tl.id]\n        if(tl.filter===\"completed\"){\n          tasksForToDoList=tasks[tl.id].filter((t:TaskType)=>{return t.isDone===true})\n        }\n      \n        if(tl.filter===\"active\"){\n          tasksForToDoList=tasks[tl.id].filter((t:TaskType)=>{return t.isDone===false})\n        }\n        return (\n          <Todolist \n            key={tl.id}\n            title={tl.title} \n            tasks={tasksForToDoList} \n            removeTask={removeTask}\n            changeFilter={changeFilter}\n            addNewTask={addNewTask}\n            changeChecked={changeChecked}\n            filter={tl.filter}\n            id={tl.id}/>\n          )\n      })}\n    </div>\n  );\n}\n\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}