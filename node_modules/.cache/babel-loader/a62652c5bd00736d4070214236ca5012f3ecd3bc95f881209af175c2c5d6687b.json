{"ast":null,"code":"import { v1 } from \"uuid\";\nconst initialState = [{\n  id: todolistId1,\n  title: \"what to learn\",\n  filter: \"all\"\n}, {\n  id: todolistId2,\n  title: \"what to buy\",\n  filter: \"all\"\n}];\nexport const todolistsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'REMOVE-TODOLIST':\n      return [...state.filter(t => {\n        return t.id !== action.id;\n      })];\n    case 'ADD-TOODOLIST':\n      return [{\n        id: action.todolistId,\n        title: action.title,\n        filter: 'all'\n      }, ...state];\n    case 'CHANGE-TODOLIST-TITLE':\n      if (action.title.trim().length !== 0) {\n        state.map(el => {\n          if (el.id === action.id) {\n            el.title = action.title;\n          }\n        });\n      }\n      return [...state];\n    case 'CHANGE-NEW-FILTER':\n      state.map(e => {\n        if (e.id === action.id) {\n          e.filter = action.filter;\n        }\n      });\n      return [...state];\n    default:\n      return state;\n  }\n};\nexport const removeTodolistAC = todolistId => {\n  return {\n    type: 'REMOVE-TODOLIST',\n    id: todolistId\n  };\n};\nexport const addTodolistAC = title => {\n  return {\n    type: 'ADD-TOODOLIST',\n    title: title,\n    todolistId: v1()\n  };\n};\nexport const changeTodolistTitleAC = (todolistId, title) => {\n  return {\n    type: 'CHANGE-TODOLIST-TITLE',\n    id: todolistId,\n    title: title\n  };\n};\nexport const changeNewFilterAC = (todolistId, filter) => {\n  return {\n    type: 'CHANGE-NEW-FILTER',\n    id: todolistId,\n    filter: filter\n  };\n};","map":{"version":3,"names":["v1","initialState","id","todolistId1","title","filter","todolistId2","todolistsReducer","state","action","type","t","todolistId","trim","length","map","el","e","removeTodolistAC","addTodolistAC","changeTodolistTitleAC","changeNewFilterAC"],"sources":["/Users/user/Documents/Projects/React:Typescript-project/Todolist/todolist-project/src/state/todolists-reducer.ts"],"sourcesContent":["import { v1 } from \"uuid\"\nimport { FilterValuesType, TodolistType } from \"../App\"\n\nexport type  RemoveTodolistActionType={\n    type: 'REMOVE-TODOLIST'\n    id:string\n}\n\nexport type AddTodolistActionType = {\n    type: 'ADD-TOODOLIST'\n    title:string\n    todolistId:string\n}\n\nexport type ChangeTodolistTitleActionType = {\n    type: 'CHANGE-TODOLIST-TITLE'\n    id:string\n    title:string\n}\n\nexport type ChangeNewFilterActionType = {\n    type: 'CHANGE-NEW-FILTER'\n    id:string\n    filter:FilterValuesType\n}\n\nexport type ActionsTypes  = RemoveTodolistActionType | ChangeTodolistTitleActionType | ChangeNewFilterActionType | AddTodolistActionType\nconst initialState = [\n    {id: todolistId1 , title:\"what to learn\", filter: \"all\"},\n    {id: todolistId2, title:\"what to buy\", filter:\"all\"}\n]\nexport const todolistsReducer = (state: Array <TodolistType> =  initialState, action: ActionsTypes): Array <TodolistType>  => {\n    switch(action.type){\n        case 'REMOVE-TODOLIST' :\n            return [...state.filter((t) => {return (t.id!==action.id)})]\n        case 'ADD-TOODOLIST' :\n            return [{ \n                id:action.todolistId,\n                title: action.title,\n                filter:'all'\n            },...state]\n        case 'CHANGE-TODOLIST-TITLE' :\n            if(action.title.trim().length!==0){\n                state.map((el)=>{\n                if (el.id===action.id){\n                    el.title=action.title\n                }\n                })\n            }\n            return [...state]\n        case 'CHANGE-NEW-FILTER' :\n            state.map((e) => {\n                if (e.id ===action.id){\n                    e.filter = action.filter\n                }\n            })\n            return [...state]\n        default:\n            return state\n    }\n}\n\nexport const removeTodolistAC  = (todolistId:string):RemoveTodolistActionType =>{\n    return { type:'REMOVE-TODOLIST', id: todolistId}\n}\n\nexport const addTodolistAC = (title:string):AddTodolistActionType =>{\n    return {type: 'ADD-TOODOLIST', title:title, todolistId:v1()}\n}\n\nexport const changeTodolistTitleAC = (todolistId:string, title:string):ChangeTodolistTitleActionType =>{\n    return {type: 'CHANGE-TODOLIST-TITLE',id: todolistId , title:title}\n}\n\nexport const changeNewFilterAC = (todolistId:string,  filter:FilterValuesType):ChangeNewFilterActionType =>{\n    return {type: 'CHANGE-NEW-FILTER',id: todolistId , filter:filter}\n}"],"mappings":"AAAA,SAASA,EAAE,QAAQ,MAAM;AA2BzB,MAAMC,YAAY,GAAG,CACjB;EAACC,EAAE,EAAEC,WAAW;EAAGC,KAAK,EAAC,eAAe;EAAEC,MAAM,EAAE;AAAK,CAAC,EACxD;EAACH,EAAE,EAAEI,WAAW;EAAEF,KAAK,EAAC,aAAa;EAAEC,MAAM,EAAC;AAAK,CAAC,CACvD;AACD,OAAO,MAAME,gBAAgB,GAAGA,CAACC,KAA2B,GAAIP,YAAY,EAAEQ,MAAoB,KAA4B;EAC1H,QAAOA,MAAM,CAACC,IAAI;IACd,KAAK,iBAAiB;MAClB,OAAO,CAAC,GAAGF,KAAK,CAACH,MAAM,CAAEM,CAAC,IAAK;QAAC,OAAQA,CAAC,CAACT,EAAE,KAAGO,MAAM,CAACP,EAAE;MAAC,CAAC,CAAC,CAAC;IAChE,KAAK,eAAe;MAChB,OAAO,CAAC;QACJA,EAAE,EAACO,MAAM,CAACG,UAAU;QACpBR,KAAK,EAAEK,MAAM,CAACL,KAAK;QACnBC,MAAM,EAAC;MACX,CAAC,EAAC,GAAGG,KAAK,CAAC;IACf,KAAK,uBAAuB;MACxB,IAAGC,MAAM,CAACL,KAAK,CAACS,IAAI,CAAC,CAAC,CAACC,MAAM,KAAG,CAAC,EAAC;QAC9BN,KAAK,CAACO,GAAG,CAAEC,EAAE,IAAG;UAChB,IAAIA,EAAE,CAACd,EAAE,KAAGO,MAAM,CAACP,EAAE,EAAC;YAClBc,EAAE,CAACZ,KAAK,GAACK,MAAM,CAACL,KAAK;UACzB;QACA,CAAC,CAAC;MACN;MACA,OAAO,CAAC,GAAGI,KAAK,CAAC;IACrB,KAAK,mBAAmB;MACpBA,KAAK,CAACO,GAAG,CAAEE,CAAC,IAAK;QACb,IAAIA,CAAC,CAACf,EAAE,KAAIO,MAAM,CAACP,EAAE,EAAC;UAClBe,CAAC,CAACZ,MAAM,GAAGI,MAAM,CAACJ,MAAM;QAC5B;MACJ,CAAC,CAAC;MACF,OAAO,CAAC,GAAGG,KAAK,CAAC;IACrB;MACI,OAAOA,KAAK;EACpB;AACJ,CAAC;AAED,OAAO,MAAMU,gBAAgB,GAAKN,UAAiB,IAA6B;EAC5E,OAAO;IAAEF,IAAI,EAAC,iBAAiB;IAAER,EAAE,EAAEU;EAAU,CAAC;AACpD,CAAC;AAED,OAAO,MAAMO,aAAa,GAAIf,KAAY,IAA0B;EAChE,OAAO;IAACM,IAAI,EAAE,eAAe;IAAEN,KAAK,EAACA,KAAK;IAAEQ,UAAU,EAACZ,EAAE,CAAC;EAAC,CAAC;AAChE,CAAC;AAED,OAAO,MAAMoB,qBAAqB,GAAGA,CAACR,UAAiB,EAAER,KAAY,KAAkC;EACnG,OAAO;IAACM,IAAI,EAAE,uBAAuB;IAACR,EAAE,EAAEU,UAAU;IAAGR,KAAK,EAACA;EAAK,CAAC;AACvE,CAAC;AAED,OAAO,MAAMiB,iBAAiB,GAAGA,CAACT,UAAiB,EAAGP,MAAuB,KAA8B;EACvG,OAAO;IAACK,IAAI,EAAE,mBAAmB;IAACR,EAAE,EAAEU,UAAU;IAAGP,MAAM,EAACA;EAAM,CAAC;AACrE,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}