{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/Projects/React:Typescript-project/Todolist/todolist-project/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { Todolist } from './components/Todolist/Todolist/Todolist';\nimport { v1 } from 'uuid';\nimport AddNewTask from './components/AddNewTask/AddNewTask';\nimport { AppBar, Button, Container, IconButton, Toolbar, Typography } from '@mui/material';\nimport { MenuBook } from '@mui/icons-material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  let todolistId1 = v1();\n  let todolistId2 = v1();\n  let [tasks, setTasks] = useState({\n    [todolistId1]: [{\n      id: v1(),\n      title: 'CSS',\n      isDone: true\n    }, {\n      id: v1(),\n      title: 'JS',\n      isDone: true\n    }, {\n      id: v1(),\n      title: 'React',\n      isDone: false\n    }, {\n      id: v1(),\n      title: 'Redux',\n      isDone: false\n    }],\n    [todolistId2]: [{\n      id: v1(),\n      title: 'Book',\n      isDone: false\n    }, {\n      id: v1(),\n      title: 'Milk',\n      isDone: true\n    }]\n  });\n  let [todolist, setTodolist] = useState([{\n    id: todolistId1,\n    title: \"what to learn\",\n    filter: \"all\"\n  }, {\n    id: todolistId2,\n    title: \"what to buy\",\n    filter: \"all\"\n  }]);\n  const addNewTask = (value, id) => {\n    if (value.trim().length !== 0) {\n      let newTasks = {\n        ...tasks\n      };\n      newTasks[id].unshift({\n        id: v1(),\n        title: value.trim(),\n        isDone: false\n      });\n      setTasks(newTasks);\n    }\n  };\n  const changeChecked = (id, todolistId) => {\n    let currentTask = tasks[todolistId];\n    let task = currentTask.find(el => el.id === id);\n    if (task) task.isDone = !task.isDone;\n    setTasks({\n      ...tasks\n    });\n  };\n  const removeTask = (id, todolistId) => {\n    let currentTask = tasks[todolistId];\n    currentTask = currentTask.filter(t => {\n      return t.id !== id;\n    });\n    tasks[todolistId] = currentTask;\n    setTasks({\n      ...tasks\n    });\n  };\n  const changeTaskTitle = (taskId, todolistId, newValue) => {\n    if (newValue.trim().length !== 0) {\n      tasks[todolistId].map(el => {\n        if (el.id === taskId) {\n          el.title = newValue;\n        }\n      });\n      setTasks({\n        ...tasks\n      });\n    }\n  };\n  const changeTodolistTitle = (todolistId, newValue) => {\n    if (newValue.trim().length !== 0) {\n      todolist.map(el => {\n        if (el.id === todolistId) {\n          el.title = newValue;\n        }\n      });\n      setTodolist([...todolist]);\n    }\n  };\n  const changeFilter = (filter, todolistId) => {\n    todolist.map(el => {\n      if (el.id === todolistId) {\n        el.filter = filter;\n        setTodolist([...todolist]);\n      }\n    });\n  };\n  const addTodolist = title => {\n    let newTodolist = {\n      id: v1(),\n      title: title,\n      filter: 'all'\n    };\n    setTodolist([newTodolist, ...todolist]);\n    setTasks({\n      ...tasks,\n      [newTodolist.id]: []\n    });\n  };\n  const deleteTask = id => {\n    todolist = todolist.filter(el => el.id !== id);\n    setTodolist([...todolist]);\n    delete tasks.id;\n    setTasks({\n      ...tasks\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          edge: \"start\",\n          color: \"inherit\",\n          \"aria-label\": \"menu\",\n          children: /*#__PURE__*/_jsxDEV(MenuBook, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"News\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"inherit\",\n          children: \"login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      fixed: true,\n      position: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-new-todolist\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-new-todolist\",\n          children: /*#__PURE__*/_jsxDEV(AddNewTask, {\n            addItem: addTodolist\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: todolist.map(tl => {\n          let tasksForToDoList = tasks[tl.id];\n          if (tl.filter === \"completed\") {\n            tasksForToDoList = tasks[tl.id].filter(t => {\n              return t.isDone === true;\n            });\n          }\n          if (tl.filter === \"active\") {\n            tasksForToDoList = tasks[tl.id].filter(t => {\n              return t.isDone === false;\n            });\n          }\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"todolist\",\n            children: /*#__PURE__*/_jsxDEV(Todolist, {\n              title: tl.title,\n              tasks: tasksForToDoList,\n              removeTask: removeTask,\n              changeFilter: changeFilter,\n              addNewTask: addNewTask,\n              changeChecked: changeChecked,\n              filter: tl.filter,\n              id: tl.id,\n              deleteTask: deleteTask,\n              changeTaskTitle: changeTaskTitle,\n              changeTodolistTitle: changeTodolistTitle\n            }, tl.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 11\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"LswsIr1OKNC8yLSxG1RibN8OOnk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Todolist","v1","AddNewTask","AppBar","Button","Container","IconButton","Toolbar","Typography","MenuBook","jsxDEV","_jsxDEV","App","_s","todolistId1","todolistId2","tasks","setTasks","id","title","isDone","todolist","setTodolist","filter","addNewTask","value","trim","length","newTasks","unshift","changeChecked","todolistId","currentTask","task","find","el","removeTask","t","changeTaskTitle","taskId","newValue","map","changeTodolistTitle","changeFilter","addTodolist","newTodolist","deleteTask","className","children","position","edge","color","fileName","_jsxFileName","lineNumber","columnNumber","variant","fixed","addItem","tl","tasksForToDoList","_c","$RefreshReg$"],"sources":["/Users/user/Documents/Projects/React:Typescript-project/Todolist/todolist-project/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport { TaskType, Todolist } from './components/Todolist/Todolist/Todolist';\nimport { v1 } from 'uuid';\nimport AddNewTask from './components/AddNewTask/AddNewTask';\nimport { AppBar, Button, Container, IconButton, Toolbar, Typography } from '@mui/material';\nimport { MenuBook } from '@mui/icons-material';\n\nexport type FilterValuesType =\"all\" | \"completed\" | \"active\"\nexport type TodolistType = {\n  id:string\n  title:string\n  filter:FilterValuesType\n}\n\ntype TaskStateType = {\n  [key: string]: Array<TaskType>\n}\n\nfunction App() {\n  let todolistId1 = v1()\n  let todolistId2 = v1()\n  let [tasks, setTasks]=useState<TaskStateType>({\n    [todolistId1]:[\n      {id:v1(), title:'CSS', isDone:true},\n      {id:v1(), title:'JS', isDone:true},\n      {id:v1(), title:'React', isDone:false},\n      {id:v1(), title:'Redux', isDone:false}\n    ],\n    [todolistId2]:[\n      {id:v1(), title:'Book', isDone:false},\n      {id:v1(), title:'Milk', isDone:true},\n    ]\n  })\n\n  let[todolist,setTodolist]= useState<Array <TodolistType>>([\n    {id: todolistId1 , title:\"what to learn\", filter: \"all\"},\n    {id: todolistId2, title:\"what to buy\", filter:\"all\"}\n  ])  \n  const addNewTask= (value:string, id:string) =>{\n    if(value.trim().length!==0){\n      let newTasks = {...tasks}\n      newTasks[id].unshift({id:v1(), title: value.trim(), isDone:false})\n      setTasks(newTasks)\n  }\n  }\n\n  const changeChecked= (id:string, todolistId:string) =>{\n    let currentTask = tasks[todolistId]\n    let task = currentTask.find((el) => el.id===id)\n    if (task)  task.isDone=!task.isDone\n    setTasks({...tasks})\n  }\n\n  \n  const removeTask = (id:string,todolistId:string)=>{\n    let currentTask = tasks[todolistId]\n    currentTask=currentTask.filter((t:TaskType) => {return (t.id!==id)})\n    tasks[todolistId]=currentTask\n    setTasks({...tasks})\n  }\n\n  const changeTaskTitle = (taskId:string,todolistId:string, newValue:string) =>{\n    if(newValue.trim().length!==0){\n      tasks[todolistId].map((el)=>{\n        if (el.id===taskId){\n          el.title=newValue\n        }\n      })\n      setTasks({...tasks})\n    }\n  }\n\n  const changeTodolistTitle = (todolistId:string, newValue:string)=>{\n    if(newValue.trim().length!==0){\n      todolist.map((el)=>{\n        if (el.id===todolistId){\n          el.title=newValue\n        }\n      })\n      setTodolist([...todolist])\n    }\n  }\n\n  const changeFilter = (filter:FilterValuesType, todolistId:string)=>{\n    todolist.map((el) => {\n      if (el.id===todolistId){\n        el.filter=filter\n        setTodolist([...todolist])\n      }\n    })\n  }\n  const addTodolist = (title:string)=>{\n    let newTodolist :TodolistType ={\n      id:v1(),\n      title: title,\n      filter:'all',\n    } \n    setTodolist([newTodolist,...todolist])\n    setTasks({...tasks,\n      [newTodolist.id]:[]\n    })\n  }\n  const deleteTask = (id:string)=>{\n    todolist=todolist.filter((el)=> el.id!==id)\n    setTodolist([...todolist])\n    delete tasks.id\n    setTasks({...tasks})\n  }\n  return (\n    <div className=\"App\">\n      <AppBar position='static'>\n        <Toolbar>\n          <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n            <MenuBook/>\n          </IconButton>\n          <Typography variant='h6'>\n            News\n          </Typography>\n          <Button color='inherit'>login</Button>\n        </Toolbar>\n      </AppBar>\n      <Container fixed position='center'>\n        <div className='add-new-todolist'>\n          <div className='add-new-todolist'>\n            <AddNewTask addItem={addTodolist}/>\n          </div>\n        </div>\n        <div className='container'>\n        {todolist.map((tl)=>{\n          let tasksForToDoList = tasks[tl.id]\n          if(tl.filter===\"completed\"){\n            tasksForToDoList=tasks[tl.id].filter((t:TaskType)=>{return t.isDone===true})\n          }\n        \n          if(tl.filter===\"active\"){\n            tasksForToDoList=tasks[tl.id].filter((t:TaskType)=>{return t.isDone===false})\n          }\n        return (\n          <div className='todolist'>\n            <Todolist \n            key={tl.id}\n            title={tl.title} \n            tasks={tasksForToDoList} \n            removeTask={removeTask}\n            changeFilter={changeFilter}\n            addNewTask={addNewTask}\n            changeChecked={changeChecked}\n            filter={tl.filter}\n            id={tl.id}\n            deleteTask={deleteTask}\n            changeTaskTitle={changeTaskTitle}\n            changeTodolistTitle={changeTodolistTitle}/>\n          </div>\n          )\n      })}\n      </div>\n      </Container>\n    </div>\n  );\n}\n\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}